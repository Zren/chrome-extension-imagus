{
    "dereferers": {
        "link": "^[^/]{3,70}/\\??(https?:[^?#]+\\.(?:jpe?g|a?png|gifv?|bmp|svgz?|web[pm]|og[gv])).*",
        "ci": 1,
        "dc": 1,
        "loop": 1,
        "to": "$1"
    },
    "fb-g+-ddg-proxy": {
        "img": "^(?:(?:(?:fbexternal-[a-z]\\.akamaihd|(?:s-|fb)?external[^.]*(?:\\.[-\\da-z]+)+?\\.fbcdn|platform\\.ak\\.fbcdn)\\.net|(?:l\\.)?facebook\\.com)/(?:safe_image|www/app_full_proxy|(l))\\.php|images\\d-focus-opensocial\\.googleusercontent\\.com/gadgets/proxy|^images\\.duckduckgo\\.com/iu/)\\?(?:[^&]+&)*?(?:u(?:rl)?|src)=(http[^&]+).*",
        "to": ":\nvar u=decodeURIComponent($[2].replace(/\\+/g,' ')),n\nthis.node.IMGS_fallback_zoom=u\nn=this.find({href: u, IMGS_TRG: this.node})\nreturn n&&typeof n!='number'||n===null? (Array.isArray(n) ? n.join('\\n') : n) : ($[1]?'':u)"
    },
    "GoogleImages": {
        "link": "^(?:(?:images|encrypted)\\.)?google\\.[^/]+/(?:imgres\\?(?:[^&]+&)*?imgurl=([^&]+)|search\\?(?:[^&]+&)*?(?:imgil|fir)=([^%;]+)).*",
        "url": ": $[1] ? '' : $[0]",
        "res": ":\nvar i=!$[1]&&$._.match(RegExp(':\"'+$[2]+':?\",\"(?:[^\"]+\":[^,]+,\")+?ou\":(\"[^\"]+\")')),d=decodeURIComponent\n$ = $[1] && d(d($[1])) || i && JSON.parse(i[1])\nreturn $ ? (!$.lastIndexOf('http',0) ? $ : 'http://' + $) : !1",
        "img": "^images-partners-tbn\\.google\\.com/images\\?q=tbn:[^:]+:(.+)"
    },
    "google-url": {
        "link": "^google\\.(?:com|(?:com?\\.)?[a-z]{2})/url\\?(?:[^&]+&)*?q=(http[^&]+\\.(?:jpe?g|gifv?|a?png|bmp|web[pm]|mp[34]]))(?:$|&).*",
        "dc": 1,
        "to": "$1"
    },
    "yahoo": {
        "link": "^images\\.search\\.yahoo\\.com/(?:search/images|images/view)[?;](?:[^&]+&)*?imgurl=(https?(?:%3A%2F%2F|://))?([^&]+).*",
        "dc": 3,
        "loop": 3,
        "img": "^(?:[sl]\\d?\\.yimg\\.com/|yahoo.com/\\w\\w/)\\w\\w/api/res/(?:[^/]+/)+?(https?://.+)",
        "to": ":\nreturn $[2] ? ($[1]||'http://') + $[2] : $[1].replace(/\\.cf\\.\\w{3,4}$/, '')"
    },
    "yandex": {
        "link": "^(?:images\\.)?yandex\\.[^./]+/(?:images/|yand)?search\\?(?:[^&]*&)*?img_url=([^&]{5,}).*",
        "dc": 1,
        "loop": 1,
        "img": "^(img\\d*-fotki\\.yandex\\.(?:ru|net)/get/\\d+/\\w+\\.\\w+/\\d_)(?:STATIC)?([\\da-f]+_[\\da-f]+_)[^.]+",
        "to": ":\nvar u = (!$[1].lastIndexOf('http',0) ? '' : 'http://') + $[1];\nif(!$[2]) try {\nvar p,o=JSON.parse(document.evaluate(\"string(ancestor::div[@data-bem][1]/@data-bem)\", this.node, null, 2, null).stringValue);\nfor (p in o){u = o[p].dups.slice(0,2).map(function(el) {return (el.url||el.img_href)+'\\n';}) + u; break}\n} catch(ex){}\nreturn $[2] ? '#' + u + $[2] + 'orig\\n' + u + $[2] + 'X#XXL L#' : u"
    },
    "Bing": {
        "useimg": 1,
        "link": "^(bing\\.com/images/search\\?)(?:q|view)=(?:[^&]*&)+id=([\\dA-F]{40}).*",
        "loop": 3,
        "url": ": $[0].indexOf('mediaurl=h')>0 ? '' : $[1] + 'view=detailV2&id=' + $[2]",
        "res": ":\nvar m = $[0].match(/mediaurl=(http[^&]+)/);\nif(m)return decodeURIComponent(m[1])\nm = $._.match(/class=\"mainImage\"[^>]+?src2=\"([^\"]+)/)\nif(m)return m[1]\nm = document.evaluate('./ancestor-or-self::a[contains(@m, \"imgurl\") or contains(@m, \"murl\")]/@m',this.node,null,2,null).stringValue\nreturn m && JSON.parse(m).imgurl || null",
        "img": "^(tse[\\d-]+\\.mm\\.bing\\.net/th\\?id=[^&]+).*",
        "to": ":\nvar m = document.evaluate('./ancestor-or-self::a[contains(@m, \"imgurl\") or contains(@m, \"murl\")]/@m', this.node ,null,2,null).stringValue\nm = m && JSON.parse(m);\nm = m && (m.imgurl||m.murl)\nreturn (m ? m + '\\n' : '') + $[1]"
    },
    "aol": {
        "img": "^([os]\\d?\\.aolcdn\\.com/(?:(?:images/)?dims|hss|photo)(?:[^/]*/|\\?(?:[^&]*&)*?image_uri=([^&]+)).*|r\\.search\\.aol\\.com/(?:[^/]+/)*?RU=(http[^/]+).*)",
        "dc": 2,
        "loop": 2,
        "to": ":\nif($[2]||$[3])return $[2]||$[3]\nvar m=$[1].match(/(https?)(?::\\/\\/?|%3A(?:%2F){1,2})(?!.+https?:\\/)(.+)/)\nreturn m ? m[1]+'://'+m[2] : $[1]"
    },
    "startpage": {
        "img": "^s\\d+-eu\\d+\\.(?:ixquick|startpage)\\.com/cgi-bin/serveimage\\?url=(http[^&]+).*",
        "to": ":\nvar i=this.node.closest('li');\ni=i&&i.querySelector('img[data-image-result-overlay-image]');\nreturn i && i.dataset.src || decodeURIComponent($[1])"
    },
    "image.baidu": {
        "link": "^image\\.baidu\\.com/(?:i|search/detail)/?\\?(?:[^&]*&)*objurl=([^&]+).*",
        "dc": 1,
        "loop": 1,
        "to": "$1"
    },
    "GoogleContent": {
        "img": "^((?:(?:lh|gp|yt)\\d+\\.g(?:oogleuserconten|gph)|\\d\\.bp\\.blogspo)t\\.com/)(?:([_-](?:[\\w\\-]{11}/){3}[\\w\\-]{11,}/)([^/]+)(/[^?#=]+)?|([^=]+)).*",
        "to": ":\nvar c=$[3]&&$[3].match(/-?(?:Ic\\d\\d|mo)/); c=c&&('-'+c[0])||'';\nreturn '#' + $[1] + ($[5] ? $[5] + '=' : $[2]) + (c?'s1600'+c:'s0') + ($[4]||($[5]?'':'/')) + '\\n' +\n $[1] + ($[5] ? $[5] + '=' : $[2]) + 's1024' + c + ($[4]||($[5]?'':'/'))"
    },
    "WikiMedia": {
        "useimg": 1,
        "link": "^[^/]{4,70}/(?:[^/#?]*/)*?(?:index\\.php\\?title=)?(?:(?:%\\w\\w){2,42}|[ABDFIPST](?:%\\w\\w|[^\\d:/?&#]){2,10})(?::|%3A)[^/&]{1,512}\\.(?:jp(?:g|eg?)|a?png|gif|svgz?|web[pm]|bmp|og[gv]|mp4)(?!&action=)",
        "ci": 3,
        "dc": 1,
        "res": "<div class=\"(?:fullMedia|fullImageLink\" id=\"file)\"><(?:a href|img (?:border=\"0\" )?src)=\"([^\"]+)",
        "img": "^([^/]+/+([^/]+/+)*?)(?:thumb|(images|avatars))/((?:archive/)?\\w{1,2}/\\w{1,4}/([^/]+(?:\\.(jpe?g|gif|png|svgz?|tif)|(?=/revision/))))(?:/(lossy-page\\d+-)?\\d+px-(?:\\3|thumbnail).*|(/revision/)[^?]*)",
        "to": ":\nif($[7])return $[1] + 'thumb/' + $[4] + '/' + $[7] + '2048px-' + $[5] + '.jpg';\nreturn '#' + $[1] + ($[3] ? $[3] + '/' : '') + $[4] + (!$[8] && !$[1].lastIndexOf('upload.wikimedia.org',0) && !/^gif/i.test($[6]) ? '\\n'+ $[1] + 'thumb/' + $[4] + '/1024px-' + $[5] + (/^svg/i.test($[6]) ? '.png' : '') : ($[8] ? $[8] + 'latest' : ''))"
    },
    "facebook": {
        "link": "^(?:(?:m(?:basic)?\\.)?facebook\\.com/(?:photo(?:/download/|\\.php|s/\\w+/)\\?(?:fb|photo_)id=|([^/]+/photos/)(?:[a-z]+\\.[^/]+/)?)|lookaside\\.fbsbx\\.com/lookaside/crawler/media/\\?media_id=)(\\d+).*",
        "url": ": this.node.dataset && this.node.dataset.ploi ? '' : 'https://www.facebook.com/' + ($[1] ? $[1] + $[2] : 'photo.php?fbid=' + $[2])",
        "res": ":\nif($._===void 0)return this.node.dataset.ploi\nu=$._.match(RegExp('='+($[2]||$[1])+'(?:[^\">]+\"\\\\s+)+?data-ploi=\"([^\"]+)')) || $._.match(/=\"og:image\" content=\"([^\"]+)/)\nreturn u && u[1]",
        "img": "^(?:fbcdn-s?photos[\\da-z-]+\\.akamaihd|s?(?:content|photos|origincache)[^/]+\\.fbcdn)\\.net/(?!h?vthumb-)[^_?]+/\\d+_(\\d+).*",
        "loop": 2,
        "to": ":\nif($[0].indexOf('.mp4?')>0)return''\nvar p=this.node\nif(window.location.hostname.slice(-13)=='.facebook.com' && (document.evaluate('./ancestor::div[contains(@class, \"stageWrapper\")]', p, null, 9, null).singleNodeValue || p.matches('.UFICommentContent>div[data-testid], a>abbr>span.timestampContent, #fbProfileCover>a:first-child')))return''\np=p.pathname||(p=p.parentNode)&&p.pathname||(p=p.parentNode)&&p.pathname\np=p&&p.match(/^\\/([\\w.-]+)\\/?$/)\nreturn 'https://facebook.com/' + (p?p[1]+'/photos/' : 'photo.php?fbid=') + $[1]"
    },
    "vk": {
        "useimg": 1,
        "link": "^(?:m\\.)?vk\\.com/photo([\\d\\-_]+)(?:\\?(tag)=(\\d+))?.*",
        "url": ": 'vk.com/al_photos.php :list=' + ($[3] ? $[2]+$[3]:((this.node.parentNode.getAttribute('onclick')+'').match(/wall-[\\d_]+/)||'')+'')+'&act=show&al=1&photo='+$[1]",
        "res": ":\nvar m = /[\\-\\d_]+/, img, ret = null, cache = {'_arr': []}, i, pid = $.url[1].substr($.url[1].lastIndexOf('=') + 1), x = JSON.parse($._.substring($._.indexOf('['), $._.lastIndexOf(']<!><!json>') + 1));\nfor (i in x) {\n ret = x[i].w_src ? ['#' + x[i].w_src] : [];\n ret.push(x[i].z_src || x[i].y_src || x[i].x_src);\n if (x[i].id == pid) { img = [[ret]] }\n else { cache[x[i].id] = ret; cache._arr.push('a[href^=\"/photo'+x[i].id+'\"]') }\n}\ncache._arr.length && [].forEach.call(document.body.querySelectorAll(cache._arr.join(',')), function(node) {\nvar x = cache[node.pathname.match(m)[0]];\nif (!node.IMGS_c) {\n node.IMGS_c_resolved = x;\n node.firstElementChild && (node.firstElementChild.IMGS_c_resolved = x);\n}\n});\nreturn img;",
        "img": "^(?:cs\\d+|pp)\\.(?:userapi\\.com|vk\\.me)/(c\\d+/)*[uv]\\d+/.+",
        "to": ":\nvar x = this.node,p=x&&x.parentNode; $=$[0]\nif (x.dataset.src_big) $ = x.dataset.src_big.split('|')[0]\nelse if (x) {\n if (p && p.href && x.classList.contains('page_doc_photo')) $ = p.href + '&wnd=1';\n else if ((x=x.getAttribute('onclick')||p.getAttribute('onclick')) && (x=x.match(/\\{\"?base\"?:[^\\}]+\\}/))) {\n  x = JSON.parse(x[0].replace(/\"?\\b(base|[wxyz])_?\"?:/g, '\"$1\":').replace(/(\\[|(,[\\d,]+)?\\])/g, ''));\n  $ = (x.w ? '#' + x.base + x.w + '.jpg\\n' : '') + x.base + (x.z || x.y || x.x) + '.jpg';\n }\n}\nreturn $"
    },
    "flickr": {
        "useimg": 1,
        "link": "^(?:secure\\.)?flickr\\.com/photos/[^/]+/(\\d+)/?(?:in/.+|lightbox/?|sizes.+|\\?.+|#/photos/.+)?$",
        "url": "https://www.flickr.com/photo_zoom.gne?id=$1&size=o",
        "res": ":\nvar ret, t;\nif ($._ && (ret = $._.match(/<img src=\"(https?:\\/\\/(?:farm|c)\\d+\\.static\\.?flickr\\.com[^\"]+)/))) {\n  ret = [ret[1]];\n  (t = $._.match(/<title>[^|]+\\| ([^|]+)/)) && ret.push(t[1]);\n}\nreturn ret;",
        "img": "^(?:(?:farm|c)\\d+\\.)?static\\.?flickr\\.com/(?:\\d+/){1,2}(\\d+)_[\\da-f]+(?:_[sqtmn])?\\.jpg$"
    },
    "flic.kr": {
        "link": "^flic\\.kr/p/\\w",
        "res": "(?:=\"og:image\" content|id=\"target\" src)=\"([^\"]+)\n<title>([^|]+)"
    },
    "deviantArt": {
        "useimg": 1,
        "link": "^(?:((?:[^.]+\\.)?deviantart\\.com/)(?:((?:[^/]+/)?art/[^#]+$)|#(/d\\w+))|(fav\\.me/d\\w+))",
        "url": "//backend.deviantart.com/oembed?url=http://$1$2$4%23$3",
        "res": ":\nvar $ = JSON.parse($._); $.i = $.fullsize_url || $.url || $.thumbnail_url;\nreturn [this.find({src:$.i, IMGS_TRG: this.node}) || $.i, $.title + ' by ' + $.author_name + ', in ' + $.category];",
        "img": "^th?(\\d+)(\\.deviantart\\.net/)(?:(fs\\d+|images)/\\w+/|.+?\\)/(pre\\d+)/)(.+\\.(?:jpe?g|png|gif|bmp))",
        "ci": 2,
        "to": ":\nreturn document.evaluate('./ancestor-or-self::*[@data-super-full-img]/@data-super-full-img',this.node,null,2,null).stringValue || ('//'+ ($[4] ? $[4]+$[2]+$[5] : 'fc'+$[1]+$[2]+$[3]+'/'+$[5] ))"
    },
    "imgur": {
        "link": "^(?:[im]\\.())?(imgur\\.com|filmot\\.(?:com|org))/+(?!gallery|s(?:tats|ignin|earch)|tools|topic|random|logout|account|inbox|about|contact|privacy|memegen|collab)(?:g/[^/]+/)?([^\\W_]{5}(?:[^\\W_]{2})?)[sbtmlh]?(?![,&])(?:[?/#].*)?$",
        "img": "^(?:[im]\\.([^.]+\\.)?)?(imgur\\.com|filmot\\.(?:com|org))/+([^\\W_]{5}(?:[^\\W_]{2})?)(?:[sbtmlh]|_[^.]+)?\\.(jpe?g|png|gif|mp4|webm).*",
        "to": ":\nif ($[4]=='mp4'||$[4]=='webm') $[4]='gif'\nvar l = ($[2][0]=='i' ? '//' : '')+'i.'+($[1]||'')+$[2]+'/'+$[3], x = '.'+($[4] || 'jpg')\nreturn $[4][0]=='g' ? l + '.#mp4 gif#' : ('#' + l + ($[4] ? x : '.jpg') + ($[2][0] === 'f' ? '' : '\\n' + l + 'h' + x))"
    },
    "imgur-set": {
        "link": "^(?:(?:[im]\\.)?(?:imgur\\.com|filmot\\.(?:com|org))/+(?:(?:(a|gallery(?!/random|/custom)|t(?:opic)?/[^/]+)|r/[^/]+)/([^\\W_]{5}(?:[^_\\W]{2})?)|(?:[^\\W_]{5}(?:[^\\W_]{2})?[,&])+[^_\\W]{5}(?:[^\\W_]{2})?)).*",
        "url": ": $[1] ? 'https://imgur.com/' + ($[1] == 'a' ? 'a/' + $[2] + '/embed' : $[1] + '/' + $[2] + '/hit.json') : $[0]",
        "res": ":\nvar ret = [], im, g, c, x, i, t, u, l = '//i.imgur.com/', p404='404 page</title>';\n\ntry {\n if (typeof $._ == 'string' && $._[0]!='{') {\n   if($._.lastIndexOf(p404, 300) > -1) throw true;\n   x = $._.match(/(?:album|image)\\s*[:=] +([^\\n\\r]+),/);\n   x = JSON.parse(x[1])\n   t = this.t; delete this.t;\n   if (!t&&'title' in x)t = x;\n   x.album_images&&(x=x.album_images);\n   x.images&&(x=x.images)||x.items&&(x=x.items);\n } else {\n  $._=JSON.parse($._);\n  if($._.album){\n   x=$._.album\n   t={title:x.title, description: x.description}\n   x=x.images\n  } else {\n   x=$._.data.image\n   if (x.is_album) {\n    t={title:x.title, description: x.description}\n    if (x.album_images.count != x.album_images.images.length) {\n     this.t=t\n     return {loop: l+'a/'+$[2]}\n    }\n    x=x.album_images.images\n   }\n  }\n  delete this.t;\n }\n\n if (!x)throw $._.lastIndexOf(p404, 300) > -1;\n\n t = t && [t.title, t.description].filter(Boolean).join(' - ') || !1\n x = Array.isArray(x)?x:[x]\n for (i = 0; i < x.length; ++i) {\n  im = x[i].image||x[i];\n  c = [im.title, im.caption, im.description].filter(Boolean).join(' - ');\n  if (!i && t && t!=c) c='['+t+'] ' + c;\n  im.ext = im.ext || x[i].links.original.match(/\\.[^.]+$/)[0];\n  g = (''+im.animated)=='true'\n  u = l + im.hash;\n  ret.push([!g && im.width <= 1200 && im.height <= 1200 ? u + im.ext : (g ? [u + '.mp4', u + '.gif'] : ['#' + u + im.ext, u + 'h' + im.ext]), c]);\n }\n} catch (ex) {}\nreturn ret.length ? ret : null"
    },
    "TMDb": {
        "img": "^((?:image\\.tmdb\\.org|d3gtl9l2a4fn1j\\.cloudfront\\.net)/+t/p/)[^/]+",
        "to": "$1original"
    },
    "trakt.tv": {
        "img": "^(walter\\.trakt\\.tv/images/(?:[^/]+/)+?)(?:thumb|medium|large)/",
        "to": "$1#full large#/"
    },
    "youtube": {
        "img": "^(i(?:\\d|mg)?\\.ytimg\\.com/)[^/]+(/[\\w\\-]{11}/)(?!maxresdefault).*",
        "to": "$1vi$20.jpg"
    },
    "twitch.tv": {
        "img": "^(static-cdn\\.jtvnw\\.net\\/)(?:((?:ttv-boxart|(j)tv_user_pictures|(p)reviews-ttv)\\/[^?\\/]+)[-_]\\d+x\\d+(\\.[^?]+).*|((emoticons|badges)\\/[^.]+\\/)\\d+)",
        "to": ":\nreturn $[1]+($[2] ? $[2]+($[3]?'-600x600':($[4]?'-0x0':''))+$[5] : $[6]+($[7][0]=='b'?3:5))"
    },
    "last.fm": {
        "img": "^((?:img\\d-ak\\.lst\\.fm|lastfm-img\\d\\.akamaized\\.net)/i/u/)[^/]+/",
        "to": "$1"
    },
    "ask.fm": {
        "useimg": 1,
        "link": "^ask\\.fm/[^/]+/answers?/\\d+/photo",
        "res": "src=\"(https?://(?:ak)?photo\\d[^\"]+)",
        "img": "^((?:ak)?(?:photo|img)\\d\\.ask\\.fm/[^.]+/)[^/]+(/\\w+\\.)",
        "to": "$1#large original normal#$2"
    },
    "pinterest": {
        "useimg": 1,
        "link": "^(?:[a-z]{2}\\.)?pinterest(?:\\.[a-z]{2,3}){1,2}/pin/[\\w-]+/$",
        "img": "^((?:i|(?:s-)?media-c(?:dn|ache\\D*)\\d*)\\.pin(?:terest|img)\\.com/)(?:(upload/\\d+_[^\\W_]{8})_[bft]|(?!550)\\d+x?\\d*(?:_[^/]+)?/|(avatars/[^.]+[_-]\\d+)(?:_(?!600)[^.]+)?(?=\\.))",
        "to": ":\nif($[1]) return $[1] + ($[2] ? $[2] : ($[3] ? $[3].replace(/(\\d+)_\\d+$/, '$1') + '_600' : '#originals 736x 564x#/'))\nvar n=this.node, p=document.evaluate('./ancestor::a[starts-with(@href,\"/pin/\")]//img[contains(@src,\"pinimg.com\")]',n,null,9,null).singleNodeValue\np=p?this.find({src: p.src, IMGS_TRG: n}):''\nreturn (Array.isArray(p) ? p.join('\\n') : (p === null ? 'null' : p)) || ''"
    },
    "SoundCloud": {
        "img": "^(i\\d\\.sndcdn\\.com/a(?:rtwork|vatar)s-[^.]+-).*",
        "to": "$1original.#jpg png gif#"
    },
    "itunes": {
        "img": "^(is\\d(?:-ssl)?\\.mzstatic.com/image/thumb/[^?]+/)\\d+x\\w+",
        "to": "$19999x9999"
    },
    "instructables": {
        "img": "^(cdn\\.instructables\\.com/)((?:[A-Z\\d]+/){3}[A-Z\\d]+)\\.[^.]+.*",
        "to": "$1ORIG/$2.#jpg gif png#"
    },
    "desmond-imageshack": {
        "useimg": 1,
        "link": "^imageshack\\.(?:com|us)/(?:[if]|(?:photo(?:s/[^/]+|/my-images))/(\\d+))(/)([^/]+).*",
        "loop": 1,
        "res": "=\"og:image\" content=\"([^\"]+)\n=\"og:title\" content=\"([^\"]+)",
        "img": "^(?:desmond\\.|imagizer\\.)?(?:imageshack\\.(?:us|com))/(?:Himg(\\d+/)scaled\\.php\\?(?:[^&]+&)*?filename=([^&]+).*|(?:scaled/[^/]+|v2/[^/]+(?:/[^\\d/]+)?)/(\\d+/.+))",
        "to": "#//imagizer.imageshack.us/v2/download/$1$2$3\n//imagizer.imageshack.us/v2/1024x1024/$1$2$3"
    },
    "imageshack": {
        "img": "^((?:im(?:g\\d+\\.im)?ageshack\\.us)/(?:a/)?img\\d+/\\d+/.+)\\.th(\\.[^.]+)$",
        "to": "$1$2"
    },
    "imageshack-set": {
        "link": "^(?:img(\\d+)\\.)?(imageshack\\.us)/(?:g/(?:(\\d+)/)?([^/]+)/|gal\\.php\\?(?:(?!g=)[^&]+&)*g=([^&]+).*|slideshow/webplayer\\.php\\?id=([^&]+))$",
        "url": "http://img$1$3.$2/gallery_api.php?action=view&g=$4$5$6",
        "res": ":\nvar ret=[],x=(new window.DOMParser()).parseFromString($._,'text/xml').querySelectorAll('file>server,file>name,file>bucket');\nfor(var i=0,l=x.length;i<l;i+=3)\n  ret.push(['http://img'+x[i].textContent+'.imageshack.us/img'+x[i].textContent+'/'+x[i+2].textContent+'/'+x[i+1].textContent, null]);\nreturn ret"
    },
    "Listal": {
        "link": "^listal\\.com/viewimage/(\\d+)().*",
        "img": "^(?:avatar|[lip](?:large|thumb|v?\\d+))\\.lis(?:tal|img)\\.com/(?:image/)?(\\d+)/\\d+[^.-]+([^.]*).+",
        "to": "#http://iv1.lisimg.com/$1/5000full$2.jpg\nhttp://iv1.lisimg.com/$1/1024full$2.jpg"
    },
    "twitter": {
        "useimg": 1,
        "link": "^(?:pic\\.twitter\\.com/\\w+|(?:m(?:obile)?\\.)?twitter\\.com/[^/]+/status/(\\d+)/(photo|video)/.*)",
        "url": ": 'https://' + (!$[0].lastIndexOf('pic',0) ? $[0] : 'twitter.com/i/' + ($[2]=='photo' ? 'tweet/html?id=' : 'cards/tfw/v1/') + $[1])",
        "res": ":\nvar x\nif (x = $._.slice && $._.slice(40,200).match(/=\"0;URL=([^\"]+)/)) return{loop: x[1]};\ntry{$._ = JSON.parse($._)}catch(ex){}\nif (x = $._.tweet_html && $._.tweet_html.match(/data-image-url=\"([^\"]+)/g)) x=x.map(function(i){i=i.slice(16).replace(/:[^:\\/]+$/,''); return [['#'+i+':orig', i+':large']]});\nelse if (x=($._.tweet_html||$._).match(/(?:video|pbs)\\.twimg\\.com(\\\\)?\\/\\w+_video(?:_thumb)?(\\\\)?\\/[^&\"]+/)) x='https://'+x[0].replace(/\\\\/g, '').replace(/(_video)_thumb(\\/[^.]+).*/, '$1$2.mp4')\nif(x) {\n var t=($._.tweet_html||$._).match(/<p[^>]+>(.+?)<\\/p>/),n=($._.tweet_html||$._).match(/data-screen-name=\"([^\"]+)/);\n t = (n?('@'+n[1]):'')+(t?(n?' - ':'')+t[1]:'')\n if(x.pop)x[0] = [x[0], t]; else x=[x,t]\n}\nreturn x",
        "img": "^(?:(p(?:bs)?\\.twimg\\.com/(?!profile_banners)(?:media/|tweet_video_thumb/)?[\\w-]{15}[^:?]*).*|((?:twimg\\d-a\\.akamaihd\\.net|(?:(?:m?a|si)\\d*|p(?:bs)?)\\.twimg\\.com)/(profile_images|card_img)/\\d+/[^?]+)(?:_|\\?(?:[^&]+&)*name=)(?:mini|normal|bigger|reasonably_small|\\d+x\\d+)(.*))",
        "to": ":\nvar v = $[1]&&$[1].replace(/(video)_thumb(\\/[^.]+).+/, '$1$2.mp4'), f = $[0].match(/(?:format=|\\.)([a-z]{3,4})(?:[:&?]|$)/), p = '?format='+(f&&f[1]||'jpg')+'&name='\nif($[1] && v.length!=$[1].length) return v\nreturn !$[3]||$[3]=='card_img' ? '#//' + ($[1] || $[2]) + p + 'orig\\n' + '//' + $[1] + p + 'large' : $[2] + $[4]"
    },
    "twitter-proxy": {
        "img": "^o\\.twimg\\.com/2/proxy\\.jpg\\?(?:[^&]+&)*?t=([^&]+).*",
        "loop": 2,
        "to": ":\nreturn decodeURIComponent(window.atob($[1].replace(/_/g, '/')).replace(/^[^h]*(https?:\\/\\/[^\\/]+\\/([\\w\\-.~:/?#\\[\\]@!$&'()*+,;=]|%\\d\\d)+).*/, '$1'))"
    },
    "t.co/twitter": {
        "link": "^t\\.co/\\w+$",
        "to": ":\nvar n = this.node, i = n.dataset, t = n.textContent.trim();\nt=/^[^\\s\\/]{4,70}\\/[^\\s]/.test(t)?t.replace(/^(?!https?:)(\\/\\/)?/, 'http://'):'';\ni = i.expandedUrl || i.imageUrl || i.url || i.fullUrl || (i = n.parentNode) && i.dataset.expandedUrl || (t && !/^(https?:\\/\\/)?t\\.co/.test(t) && t) || n.style.backgroundImage.replace(/^(?:url\\(['\"]?([^'\")]+))?.+/, '$1');\ni = i && this.find({href: i, IMGS_TRG: n});\nreturn (Array.isArray(i) ? i.join('\\n') : (i === null ? 'null' : i)) || ''"
    },
    "twitpic": {
        "link": "^(twitpic\\.com/)(?:show/[^/]+/)?([\\da-z]+).*",
        "url": "$1$2",
        "res": "src=\"([^\"]+)\" alt=\"([^\"]*)"
    },
    "instagram": {
        "useimg": 1,
        "link": "^(?:(?:i\\.)?instagr(?:\\.am|am\\.com))/(?:p/([^/?#]+).*|(\\w+)/#!ppic|api/v1/users/(\\d+)/info/)$",
        "url": ": $[2] || $[3] ? $[0] :'https://www.instagram.com/p/' + $[1] + '/?__a=1'",
        "res": ":\nvar i,c,u\nif($._[0]!='{') {\n i=$._.match(/\"id\":\"(\\d+)\",/)\n return i && {loop: 'https://i.instagram.com/api/v1/users/' + i[1] + '/info/'} || null\n}\n$._=JSON.parse($._)\nif($[3]) return [$._.user.hd_profile_pic_url_info.url, [$._.user.full_name, '('+'@' + $._.user.username+') | ', $._.user.biography].join(' ')]\n$=$._.graphql.shortcode_media\ni=$.edge_sidecar_to_children\ni=i&&i.edges\nc=$.edge_media_to_caption.edges,c=c.length&&c[0].node.text,f=$.owner.full_name\nc=new Date($.taken_at_timestamp*1e3).toLocaleString()+' | '+(c?c+' | ':'')+(f?f+' ':'')+'(@'+$.owner.username+')';\nif(i&&i.length) $=i.map(function(el,i){return [el.node.video_url || el.node.display_url, !i&&c]})\nelse $=[$.video_url || $.display_url, c]\nreturn $",
        "img": "^instagram\\.(?:[\\da-z-]+\\.){2,3}fbcdn\\.net/vp/.*",
        "loop": 2,
        "to": ":\nvar m = this.node.closest('a[href]');\nif(!m)m=this.node.matches('main[role=main] header div[role=button]>canvas+span>img, main[role=main] header button>img')&&window.location\nm=m&&m.href.match(/\\/\\/www\\.instagr(?:\\.am|am\\.com)\\/([^\\/]+)\\/?[^\\/]*/)\nreturn m ? 'https://www.instagram.com/'+m[1]+'/#!ppic' : $[0]"
    },
    "vsco": {
        "img": "^(?:i(?:m(?:age(?:-aws[\\w-]+)?)?)?)(\\.vsco\\.co/)(?:[^/]{1,23}/)*?([\\da-f]{24}).*",
        "to": "//i$1$2"
    },
    "vine": {
        "link": "^(vine\\.co\\/)v(\\/\\w+).*",
        "url": "archive.$1posts$2.json",
        "res": ":\nif($._[0]!='{')return null\n$._=JSON.parse($._)\nreturn [$._.videoUrl, $._.description+' by '+$._.username]"
    },
    "streamable": {
        "link": "^(streamable\\.com/)(?!about|documentation|privacy|terms|signup|login|tools|videos|albums|dashboard|search|clipper)(?:\\w/|album|ajax/groups/)?([\\da-z]+).*",
        "url": "$1s/$2",
        "res": ":\n$._ = $._.match(/var videoObject = (\\{[^\\n]+\\})/)\nif(!$._) return null\n$._=JSON.parse($._[1])\nvar t;\nif($._.group) {t=$._.name;$._=$._.group.videos} else {$._=[$._]}\nreturn $._.map(function(x,i) {\n var f=x.files, u=[];\n ['mp4', 'webm', 'mp4-mobile', 'webm-mobile'].forEach(function(t,ii){\n  f[t]&&u.push((ii<2?'#':'')+f[t].url)\n })\n return [u, (!i&&t ? '['+t+'] ':'') + ($._.title || '')]\n})",
        "img": "^cdn\\.(streamable\\.com/)video/[^/]+/([^.]+).*"
    },
    "vidble": {
        "useimg": 1,
        "link": "^(vidble\\.com/)(?:(?:show|explore[^/]*|album)/|watch\\?v=)([\\da-zA-Z]+).*",
        "res": ":\nvar x = $._.match(RegExp(\"src='/[\\\\da-zA-Z]+(_[^.]*)?\\\\.[^']+\", 'g')), t = $._.match(/<h2[^>]*>([^<]+)/), l = 'http://' + $[1];\nreturn x ? x.map(function(i, n) {return ['#' + l + i.replace(/_[^.]+/, ''), !n && t && t[1]]}) : x",
        "img": "^(vidble\\.com/[\\dA-Za-z]+)(?:_[^.]+)?\\.",
        "to": "#$1."
    },
    "oddshot.tv": {
        "link": "^(oddshot\\.tv/s(?:hot)?/(?:(?:\\w+/)?[\\w-]+)).*",
        "url": "$1/embed",
        "res": "\"url\":\"([^\"]+)\",\"type\":\"source\""
    },
    "clips.twitch.tv": {
        "link": "^(?:clips\\.(twitch\\.tv/)(?:embed\\?clip=)?|(twitch\\.tv/)\\w+/clip/)(\\w+).*",
        "url": "//clips.$1$2api/v2/clips/$3",
        "res": ":\nvar m=JSON.parse($._),b=m.preview_image;b=b&&b.replace(/-preview\\.jpg.*/, ''), c=b&&b.replace(/\\.tv\\//,'$&AT-cm|')\nreturn b?[[['#'+b+'.mp4', c+'-480.mp4', c+'-360.mp4'], '['+m.game+'] ' + [m.title, m.broadcaster_display_name, (new Date(m.created_at)).toLocaleString(), m.vod_url].filter(Boolean).join(' | ')]]:null"
    },
    "clippituser.tv": {
        "link": "^(clippit)user\\.tv/c(/\\w{6}).*",
        "img": "^clips.(clippit).tv(/\\w{6})/thumbnail.*",
        "to": "#//clips.$1.tv$2/720.mp4\n//clips.$1.tv$2/360.mp4"
    },
    "plays.tv": {
        "link": "^(plays\\.tv/)(s|stream|video|embeds)(/[\\w-]+).*",
        "loop": 1,
        "url": ": '//' + $[1] + ($[2][0]=='e'?'video':$[2]) + $[3]",
        "res": "=\"twitter:player:stream\" content=\"([^\"]+)\n<title>([^<]+)",
        "img": "^(d\\dplayscdntv-a\\.akamaihd\\.net/video/[\\w-]+/processed/).+",
        "to": "#//$1720.mp4\n//$1360.mp4"
    },
    "tv.naver.com": {
        "link": "^(?:m\\.)?tv\\.(naver\\.com/)v/(?:(\\d+)(?:$|[/?#])|([\\dA-F]+)/(\\w+)).*",
        "url": ": $[3] ? 'https://global.apis.'+$[1]+'rmcnmv/rmcnmv/vod_play_videoInfo.json?key='+$[4]+'&videoId='+$[3] : $[0]",
        "res": ":\nif($[2]) {\n var x=typeof $._=='string'&&$._.match(/\\?vid=([\\dA-F]+)&outKey=(\\w+)/)\n return x&&{loop:'http://tv.'+$[1]+'v/'+x[1]+'/'+x[2]}\n}\n$._=JSON.parse($._)\nreturn [$._.videos.list.pop().source, $._.meta.subject+' by '+ $._.meta.user.id]"
    },
    "LiveStreamFails": {
        "link": "^livestreamfails\\.com/post/\\d+",
        "res": "<source src=\"([^\"]+)\nname=\"description\" content=\"([^\"]+)"
    },
    "neatclip.com": {
        "link": "^(neatclip\\.com/)(?:clip|embed)(/\\w+)",
        "url": "$1clip$2",
        "res": "=\"nc:video\" content=\"([^\"]+)\n<title>([^<]+) -"
    },
    "v.redd.it": {
        "link": "^(v\\.redd\\.it/[\\da-z]+).*",
        "url": "$1/DASHPlaylist.mpd",
        "res": ":\nvar v=0,u,m=$._.match(/width=\"\\d+\">\\s*<BaseURL>([^<]+)/g)\nif(!m)return m\nm.forEach(function(m){\n m=m.match(/\"([^\"]+)\">[^>]+>(.+)/)\n if(m[1] > v) { v = m[1]; u = m[2] }\n})\nreturn '//'+$[1]+'/'+u+'#mp4'"
    },
    "reddit-media": {
        "link": "^(?:[a-z]{2}(?:-[a-z]{2})?\\.|beta\\.|old\\.)?reddit\\.com/(?:r|user)/[^/]+/comments/([\\da-z]+)/[^/]+/(?:\\?utm_content=(?:title|thumbnail).*)?$",
        "loop": 1,
        "img": "^(g\\.redditmedia\\.com/[\\w-]+\\.gif\\?(?:[^&]+&)*?fm=mp4[^#]*)(.*)",
        "to": ":\nif($[2]!==0)return $[2]=='#mp4'?$[0]:$[1]+'#mp4'\nvar u,p,c,n=window.location.hostname.slice(-10)=='reddit.com'&&this.node\nif(!n)return''\nif(n.matches('div.link a.thumbnail,div.link a.thumbnail>img, div.link a.title, div.link a.thumbnail.image')) {\n p=n;while((p=p.parentNode)&&!p.matches('div.link'));\n u=p.dataset, u=u.url||u.hrefUrl\n if(u&&/v\\.redd\\.it\\//.test(u))return u\n c=p&&p.querySelector('div.expando[data-cachedhtml]')\n c=c&&c.getAttribute('data-cachedhtml')\n u=c&&c.match(/(?:<a href|(?:class=\"preview\"|<source) src)=\"([^\"]+)/g)\n if(u) {\n  u=u.map(function(i){\n   var u=i.slice(i.lastIndexOf('\"')+1).replace(/&amp;/g,'&');\n   return u+(i[1]=='s'?'#mp4':'')\n  });\n  u=c.indexOf('<source')!=-1?u.reverse():u\n  return u.length?u.join('\\n'):''\n }\n u=p.dataset, u=u.url||u.hrefUrl\n}else if(n.matches('a.Post__titleLink')) {\n u = n.closest('.Post__top').querySelector('a.PostThumbnail').href\n}else if(n.matches('a[data-click-id=body]>h2, a[data-click-id=body]>h2>span')){\n p=n.closest('.Post');\n if(p&&p.querySelector('p,i.icon-text'))return ''\n p=p.querySelector('a>.icon-outboundLink')\n p=p ? p.parentNode : {href: '//gateway.reddit.com/desktopapi/v1/postcomments/t3_'+$[1]+'?truncate=1'}\n p=this.find({href: p.href, IMGS_TRG: n})\n n.title = n.getAttribute('aria-label') || n.title\n return (Array.isArray(p) ? p.join('\\n') : (p === null ? 'null' : p)) || ''\n}\nreturn u&&/^(https?:)?\\/\\/i\\.redd\\.?it/.test(u)?u:''"
    },
    "reddit-post": {
        "link": "^gateway\\.reddit\\.com/desktopapi/v1/postcomments/(t3_[\\da-z]+)",
        "res": ":\n$._ = JSON.parse($._)\n$._=$._.posts\nvar t = $._[$[1]].title\nfor (var i in $._) if($._[i].media){$=$._[i].media;break}\nreturn $ ? ($.dashUrl ? {loop:$.dashUrl} : [$.content, t]) : null"
    },
    "reddit-thumbs": {
        "link": "^rt/\\?(http.+)",
        "url": "$1",
        "res": ":\nvar t, r=['<meta[^>]+?property=[\\'\"]?og:','[\\'\"]?\\\\s[^>]*?content=[\\'\"]([^\\'\">]+)'], m = $._.match(RegExp(r[0]+'image(?::url)?'+r[1]))\nreturn m ? [m[1], (t = $._.match(RegExp(r[0]+'title'+r[1])))&&t[1]] : !1",
        "img": "^(?:i\\.r(eddituploads\\.com|ddt\\.co)/[\\da-f]{32}\\?|[a-f]\\.thumbs\\.redditmedia\\.com/[\\w-]{16,43}\\.jpg$)",
        "loop": 2,
        "to": ":\nvar u,n=!$[1]&&this.node,x=n&&n.matches('.Post div>div[role=img]');\nn && (n.title = n.getAttribute('aria-label') || n.title);\nreturn x&&(x=n.closest('.Post')) && (x=x.querySelector('span>a+a:last-child[href]'))\n? x.href\n: n&&n.matches('div.link>a.thumbnail>img, .PostThumbnail>img, a>div[role=img]')&&n.parentNode.href ? '//rt/?'+n.parentNode.href : $[0]"
    },
    "gfycat": {
        "link": "^(gfycat\\.com)/+(?:\\w\\w/)?(?!privacy|support|partners|gifbrewery|gaming|reaction|upload|create|signup|cajax/)(?:ifr/)?(?:(?:(?:gifs/)?detail/)?([a-zA-Z]{6,})(?:/?[?#].*)?|@([\\w.-]+)(?:/[^/]+)*/([\\w-]+).*)$",
        "url": ": 'https://api.'+$[1]+'/v1/' + ($[3] ? 'users/'+$[3]+'/album_links/'+$[4] : 'gfycats/'+$[2])",
        "res": ":\nvar u,g,i=0,r=[], o=JSON.parse($._);\no=o.publishedGfys||[o.gfyItem]\nwhile(g=o[i++]) {\n u=['#'+g.webmUrl, '#'+g.mp4Url]\n g.mobileUrl&&u.push(g.mobileUrl)\n r.push([u, (g.title||'') + (g.tags&&g.tags.length ? ' ['+g.tags.join(', ')+']':'')])\n}\nreturn r.length ? r : null",
        "img": "^(?:zippy|fat|giant|thumbs)\\.(gfycat\\.com)/([a-zA-Z]+).*"
    },
    "gifs.com": {
        "link": "^(gif(?:s|y(?:t|outube))\\.com/)(?:gif|embed|player)/(?:[^-]*-)*(\\w+)",
        "img": "^(?:share|j)\\.(gif(?:s|y(?:t|outube))\\.com/)(\\w+).*",
        "to": "//j.gifs.com/$2.#webm mp4 gif#"
    },
    "iloopit": {
        "link": "^(iloopit\\.net/)(?:(?:tube/)?(\\d+)/[a-z-]+|(?:(?:[\\da-z%-]+/){1,2})\\?(?:[^&]+&)*?loopid=(\\d+)).*",
        "url": "//$1$2$3/-/?type=embed",
        "res": "\"contentUrl\": \"([^\"]+)\n\"name\": \"([^\"]+)",
        "img": "^(iloopit\\.net/resources/[\\da-f-]{36}.).*",
        "to": "//$1converted.#mp4 webm gif#"
    },
    "qwip.in": {
        "link": "^qwip\\.i[nt]/(?:watch|embed)/[\\da-f]{24}.*",
        "res": ":\nvar d=$._.match(/krowd\\.qwip\\s*=\\s*(\\{[^;]+\\});\\s*<\\/script>/)\nd=d&&JSON.parse(d[1])\nreturn !d?null:[d.media[0].raw.url, d.usertext + (d.extra.link ? ' | ' + d.extra.link : '')]"
    },
    "sendvid": {
        "link": "^(sendvid\\.com/)(?:embed/)?([\\da-z]{8})\\W*",
        "url": "$1embed/$2",
        "res": "=\"og:video:secure_url\" content=\"([^\"]+)\n=\"og:title\" content=\"([^\"]+)"
    },
    "webmshare": {
        "link": "^(webmshare\\.com/)(?!terms)(?:play/|done/)?(\\w{5})(?:[#?]|$)",
        "url": "$1play/$2",
        "res": "=\"og:video\" content=\"([^\"]+)\n=\"og:title\" content=\"([^\"|]+)"
    },
    "webm.land": {
        "link": "^(webm\\.land/)w(/\\w+)/?$",
        "img": "^(webm\\.land/)media/thumbnails(/\\w+).*",
        "to": "$1media$2.webm"
    },
    "streamja": {
        "link": "^(streamja\\.com/)(?:embed/)?(\\w{3,4})(?:[?#].*)?$",
        "url": "$1$2",
        "res": "<source src=\"([^\"]+)",
        "img": "^(streamja\\.com/)i/\\w+/(\\w+).*"
    },
    "streamvi": {
        "link": "^(streamvi\\.com/)watch\\.php\\?video=(\\d+).*",
        "to": "$1uploads/$2.mp4"
    },
    "okcupid": {
        "img": "^(a?k(?:\\d|cdn)\\.okccdn\\.com/php/load_okc_image\\.php/images/)(?:16/)?(?:\\d+x\\d+/)+?\\d/",
        "to": "$10/"
    },
    "meetup": {
        "img": "^((?:a\\d+\\.e\\.akamai\\.net/secure|photos\\d*|secure)\\.meetupstatic\\.com/photos/[^_]+/)(?!highres)[^_]+",
        "to": "$1#highres member#"
    },
    "couchsurfing": {
        "img": "^tcdn\\.couchsurfing\\.com/[\\w=-]+/(?:[^/]+/)*?(https://s\\d*\\.amazonaws\\.com/.+)",
        "to": "$1"
    },
    "squarespace": {
        "img": "^(static\\d\\.squarespace\\.com/static/[^?]+)(?:(\\?format=).*|(?:-\\d+w)?(?=\\.jpg))",
        "to": ":\nreturn $[1].replace(/-\\d+w$/,'') + ($[2] || '-') + '2500w'"
    },
    "foursquare": {
        "img": "^(i(?:gx|r?s\\d)\\.4sqi\\.net|playfoursquare\\.s3\\.amazonaws\\.com)(?:(/img/(?:general|user)/)(?!original/)[^/]+|(/userpix)_thumbs?/)",
        "to": ":\nreturn $[1] + ($[2] ? $[2] + 'original' : $[3] + '/');"
    },
    "linkedin": {
        "img": "^(media\\.licdn\\.com/mpr/mpr/)shrink[^/]+/",
        "to": "$1"
    },
    "gravatar": {
        "img": "^(?:(?:\\d|s(?:ecure)?)\\.)?(gravatar\\.com/)(?:(avatar)(?:\\.php\\?gravatar_id=|/?)|(userimage/\\d+)/)([^?&]*(?:\\.jpg)?)(?:[?&]?(?:[^&]+&)*?s(?:ize)?=(\\d+).*)?.*",
        "to": ":\nvar x = /[&?](d(?:efault)?=[^&]+)/.exec($[0]), y = /[&?](r(?:ating)?=[^&]+)/.exec($[0]);\nreturn $[1]+($[2]||$[3])+'/'+$[4]+'?s='+($[3]?1e3:512)+(x?'&'+x[1]:'')+(y?'&'+y[1]:'')"
    },
    "github": {
        "link": "^(git(?:hu|la)b\\.com/[^/]+/[^/]+/)blob(/.+\\.(?:jpe?g|a?png|gif|svgz?|web[pm]|bmp|og[gv]))$",
        "ci": 1,
        "img": "^(avatars\\d?\\.githubusercontent\\.com/u/\\d+).*",
        "to": ":\nvar v=$[2]?'':$[0].slice($[1].length); v=v&&v.match(/[?&](v=\\d+)/)||'';\nreturn $[1] + ($[2]?'raw'+$[2]:v&&('?'+v[1]))"
    },
    "sourceforge.net": {
        "img": "^((?:a\\.fsdn\\.com/con/app/proj|sourceforge\\.net/projects)/[^/]+/screenshots/[^/]+).*",
        "to": "$1"
    },
    "bugs.chromium.org": {
        "img": "^(bugs\\.chromium\\.org/p/chromium/issues/attachment\\?aid=\\d+(?:&[^&]+)*?&inline=[^&]+).*",
        "to": "$1"
    },
    "greasyfork": {
        "img": "^(greasyfork\\.org/[a-z]{2}/forum/uploads/)thumbnails(?=/FileUpload/.)",
        "to": "$1"
    },
    "cnet": {
        "img": "^(cnet\\d\\.cbsistatic\\.com/)(?:(hub/i/)r/(\\d{4}/\\d\\d/\\d\\d/[\\da-f-]{30,}/)[^/]+/[\\dxauto]+/|(img/)[\\w=-]+/\\d+x\\d+/)",
        "to": "$1$2$3$4"
    },
    "MSN": {
        "img": "^((?:static-global|img)(?:\\.s-msn\\.com|-s-msn-com\\.akamaized\\.net)/(?:img-resizer/)?tenant/amp/entityid/[^.]+).*",
        "to": "$1"
    },
    "bbci.co.uk": {
        "img": "^(ichef(?:-\\d+)?\\.bbci\\.co\\.uk/news/)\\d+",
        "to": "$12048"
    },
    "gawker": {
        "img": "^(?:(img\\.gawkerassets\\.com/img/[^/]+/)(?!original|[^.]+\\.gif)[^.]+|((?:fast)?cache\\.(?:gawkerassets|gizmodo|lifehacker|deadspin|kotaku|jezebel|io9|jalopnik)\\.com/assets/images/\\d+/\\d{4}/\\d{2}/)(?:\\d+x\\d*|medium(_\\d+)?|micro|x?small|x?large)_)",
        "to": ":\nreturn $[1] ? $[1]+'original' : $[2]"
    },
    "medium-images": {
        "img": "^(cdn-images-\\d\\.medium\\.com/max/)\\d+",
        "to": "$12000"
    },
    "fastly.net": {
        "img": "^([^.]{2,20}\\.global\\.ssl\\.fastly\\.net/[^?]+\\.(jpe?g|gif|a?png))\\?.+",
        "to": "$1"
    },
    "vogue": {
        "img": "^((?:media|assets)\\.vogue\\.com/(photos/[\\da-z]+/[^/]+|r)/)[^/]+",
        "to": "$1pass"
    },
    "bild.de": {
        "img": "^(bilder\\.bild\\.de/fotos)-skaliert(/[^/]+/)(\\d+),(?!h=2000)[^.]+",
        "to": "$1$2Bild/$3"
    },
    "spiegel.de": {
        "img": "^((?:cdn\\d?\\.)?spiegel\\.de/images/image-\\d+-)(?!videothumb|galleryV9)[^-]+",
        "to": "$1galleryV9"
    },
    "telegraph.co.uk": {
        "img": "^(telegraph.co.uk/c(?:ontent/dam|ars/images)/[^?]+)-(?:x?large|small|medium)[^?]*\\.",
        "to": "#$1.\n$1#-xlarge -large#."
    },
    "gazeta.pl": {
        "img": "^(bis?\\.gazeta\\.pl/im/(\\w{1,5}/){2,}?z\\d{4,})[A-Z]{1,3}(?=[.,])",
        "to": "#$1O\n$1Q"
    },
    "img.purch.com": {
        "img": "^img\\.purch\\.com/\\w+/(?:[\\d+x]+/)?([^?/]+).*",
        "loop": 2,
        "to": ":\nreturn window.atob($[1])"
    },
    "tom's-hardware": {
        "link": "^(tomshardware\\.com/gallery/)[^,]*,[^-]+-(\\d+).+",
        "url": "http://www.$1,-$2.html",
        "res": "#\" onclick=\"zooms\\('([^']+)",
        "img": "^(media\\.bestofmicro\\.com/)(?:ext/([^/]+).*|(\\w/\\w/\\d+/)gallery(/[^?]+)_w_\\d+\\.(\\w+).*|[^,]*,.-.-(\\d+).+)",
        "to": ":\nif ($[6]) return ''+this.find({href: 'http://tomshardware.com/gallery/,.-' + $[6] + '.html', IMGS_TRG: this.node})\nreturn $[2] ? atob($[2]) : $[1] + $[3] + 'original' + $[4] + '.#' +$[5]+ ' '+ $[5].toUpperCase() +'#'"
    },
    "gsmarena": {
        "img": "^((?:cdn|st\\d*)(\\.gsmarena\\.com/))(?:(?:pics?|(?:pics?/)?vv)/blogpics/[^/]+/i?cs-(\\d\\d)-(\\d\\d)-([^_]+)-|((?:vv|pics?)/+(?:[^/]+/)+?)thumb/|(imgroot/(?:[^/]+/+)+)-\\d*x?\\d+\\w*/(?=[^/]+))",
        "to": ":\nreturn $[3]?'st'+$[2]+'pics/'+$[3]+'/'+$[4]+'/'+$[5]+'/': $[1] + ($[6] || $[7]) + '# -1024x768m/#'"
    },
    "anandtech": {
        "img": "^(images\\.anandtech\\.com/[^/]+/\\d+/[^?]+)_(?:thumb|\\d+px|\\d+x\\d+|carousel)",
        "to": "$1"
    },
    "blogcdn": {
        "img": "^((?:media\\.)?blogcdn\\.com/[^/]+/)(?:(images/slides/(?:[^/]+/)+)s(/[^_]+)|(media/\\d{4}/\\d{2}/[^_]+))(_\\d+x\\d+)?\\.",
        "to": ":\nreturn $[1] + ($[3] ? $[2] + 'l' + $[3] : $[4]) + '.';"
    },
    "gamespot": {
        "img": "^(static\\d*\\.gamespot\\.com/uploads/)(?!original/)[^/]+",
        "to": "$1original"
    },
    "drawcrowd": {
        "useimg": 1,
        "link": "^drawcrowd\\.com/projects/[\\da-z]+",
        "loop": 1,
        "res": "content=\"(https?://[^\"]+)\" property=\"(?:og|twitter):image\"\ncontent=\"([^\"]+)\" property=\"og:description\"",
        "img": "^((?:dxthpu4318olx\\.cloudfront\\.net|works\\.drawcrowd\\.com)/(?:users/avatars/|assets/images/(?:images/)?)(?:\\d+/){3})(?!original|large)[^/]+",
        "to": "$1large"
    },
    "visualart.me": {
        "img": "^(visualart\\.me/s)[12]/",
        "to": "#$13/\n$12/"
    },
    "artstation": {
        "link": "^(artstation\\.com/)artwork(/[^/]+).*",
        "url": "$1projects$2.json",
        "res": ":\n$=JSON.parse($._)\nif (!$.user) return null;\n$.s = $.software_items.map(function(i) {return i.name}).join(', ')\n$.c = [$.title, $.description.replace(/^<p>(.*)<\\/p>$/, '$1')].filter(function(x) {return !!x.trim()}).join(' - ') + ' by ' + $.user.username;\nreturn $.assets.map(function(x, i){\n return [x.image_url, [(i ? '' : '[' + $.c + ($.s ? ' in ' + $.s : '') + ']'), (x.title||x.title_formatted||'')].join(' ')]\n})"
    },
    "steampowered": {
        "img": "^((?:(?:cloud[-\\d]*|images\\.akamai)\\.steam(?:powered|usercontent)\\.com|steamuserimages[^.]*\\.akamaihd\\.net)/ugc/\\d+/[\\dA-F]{40}).*",
        "to": "$1/"
    },
    "steamstore": {
        "img": "^(cdn\\.(?:edgecast|akamai)\\.steamstatic\\.com/steam/apps/\\d+/(?!movie)\\w+).*",
        "to": "$1.jpg"
    },
    "amazon": {
        "img": "^((?:(?:images\\.|(?:images-[a-z]{2}\\.ssl-|(?![gz]-)[^.]+\\.)images-)amazon|ia\\.media-imdb|m\\.media-amazon)\\.com/images/[^/]/[^.]+)(?:$|\\.(?!_(?:CB|V)\\d{4,}_\\.).*)",
        "to": "#$1.jpg\n$1._SY1024_SX1024_.jpg"
    },
    "newegg": {
        "img": "^((?:images|c)\\d+\\.newegg(?:images)?\\.com(?:\\.cn)?/)(?:(is/image/newegg/[^?]+)\\?\\$.*|((?:NeweggImage/)?ProductImage)(?:CompressAll\\d*)?|(neweggpic\\d/neg/P)(?!800)\\d+)",
        "to": ":\nreturn $[1] + ($[2] ? $[2] + '?$S1280$': ($[4] ? $[4] + '800' : $[3] + 'CompressAll1280'));"
    },
    "ebay": {
        "link": "^(?:(?:(?:be\\w\\w|viewitem\\.eim|cgi)\\.)?ebay\\.(?:co(?:m(?:\\.(?:hk|sg|au|my))?|\\.uk)|[hr]u|[ap]t|[bd]e|n[ol]|p[hl]|i[ten]|c[ahz]|es|f[ir]|gr)/(?:itm/)?[^/?]*[?/](?:item=)?|chodientu\\.vn/ebay-item-)(\\d{8,19}).*",
        "url": "http://open.api.ebay.com/shopping?version=787&callname=GetSingleItem&responseencoding=JSON&ItemID=$1&IncludeSelector=Variations&appid=LL-imagus-PRD-5c230b90b-5cc7e98b",
        "res": ":\nvar r=[],p,o,c,x,i,e;\ntry {\ni = JSON.parse($._).Item;\nif (!i || !i.PictureURL) throw 0;\n\n$._ = /(~~\\d*_|\\/\\$_)\\d+\\./;\nx = i.ConvertedCurrentPrice;\n$.cap = 'EBay: '+i.Title+' | Price: '+x.Value+' '+x.CurrencyID+' | Location: '+i.Location+', '+i.Country;\nif (p = i.PictureURL) {\n for (o=0;o<p.length;++o) {\n  r.push([p[o].replace($._,'$132.').replace(/^http:/, ''), !o&&$.cap]);\n }\n}\n\nif ((i = i.Variations) && (i = i.Pictures)) {\n for (o=0;o<i.length;++o) {\n  p=i[o].VariationSpecificName;\n  c=i[o].VariationSpecificPictureSet;\n  for (e=0;e<c.length;++e) {\n   for (x=0;x<c[e].PictureURL.length;++x) {\n    r.push([c[e].PictureURL[x].replace($._,'$132.').replace(/^http:/, ''), !o&&($.cap+' | '+p+': '+c[e].VariationSpecificValue)]);\n   }\n  }\n }\n}\n}catch(x){}\n\nreturn r.length ? r : null;",
        "img": "^((?:ssl)?i\\d*\\.ebayimg\\.com/(?:t/[^/]+/)?\\d+/[^_]+(?:~~\\d*)?)_(?!32)\\d+\\.",
        "to": "$1_32."
    },
    "Craigslist": {
        "link": "^[^.]+\\.(craigslist\\.[a-z]{2,3}/[^.]+/\\d+)\\.html",
        "res": ":\n$ = $._&&$._.match(/data-imgid=\"[^\"]+\" href=\"([^\"]+)/g)\nvar f=this.find, s = this.node.matches('img[src*=\"images.craigslist.org\"]') && this.node.src\nreturn $ && $.map(function(x){\n x=x.slice(x.lastIndexOf('\"') + 1)\n return [f({src: x})]\n}) || s && this.find({src: s}) || !1",
        "img": "^(images\\.craigslist\\.org/\\w+_\\w+_)(?!1200x900)[^.]+",
        "to": "$1#1200x900 600x450#"
    },
    "dx.com": {
        "useimg": 1,
        "link": "^club\\.dx\\.com/reviews/photos/\\d+/\\d+",
        "res": "<img class=\"bimg\" src=\"([^\"]+)\" alt=\"([^\"]*)",
        "img": "^((?:(?:m\\d|img)\\.)?d(?:ealextreme|xcdn)\\.com/)(?:(productimages/sku_\\d+_\\d)_[^.]+|([^/]+/[^/]+/\\d+/)(?:thumb_|(\\d+)-thumb([\\-\\da-f]+)-\\d+x\\d+))",
        "to": "$1$2$3$4$5"
    },
    "olx": {
        "img": "^((?:img?\\d*\\.(?:olx\\.(?:[a-z]{2}|com?\\.[a-z]{2}|biz\\.id)|staticclassifieds\\.com)|olx[a-z]{2}-ring\\d+\\.akamaized\\.net)/images_[^/]+/\\d+_\\d+_(?!1000x700))[^_]*",
        "to": "$1#1000x700 800x600 644x461#"
    },
    "kupujemprodajem": {
        "img": "^(kupujemprodajem\\.com/+photos/oglasi/\\d+/\\d+/\\d+/)(?:tmb-[^-]+|big)-",
        "to": "$1"
    },
    "flipkart": {
        "img": "^(rukminim\\d\\.flixcart\\.com/[^/]+/)\\d+/\\d+([^?]+).*",
        "to": "#$12000/2000$2\n$11024/1024$2"
    },
    "focalprice": {
        "img": "^(img\\.focalprice\\.com/+)(?!860x666)\\d+x\\d+/",
        "to": "$1860x666/"
    },
    "etsy": {
        "img": "^(i(?:mg\\d*)?\\.etsystatic\\.com/[^_]*/i[^_]+_)\\d+x[\\dN]+",
        "to": "$1fullxfull"
    },
    "FusionBeads": {
        "img": "^(fusionbeads\\.com/images/[^?]+)\\?.*",
        "to": "$1"
    },
    "yelp": {
        "useimg": 1,
        "link": "^yelp\\.com/biz_photos/[^?]+\\?select=[\\w-]+",
        "res": "=\"og:image\" content=\"([^\"]+)\n=\"og:description\" content=\"([^\"]+)",
        "img": "^(s\\d(yelp\\d-a\\.akamaihd\\.net|-media\\d\\.\\w\\w\\.yelp(?:cdn|assets)\\.com)/[a-z]?photo/[\\w-]+/)(?!o)[^.]+",
        "to": "$1o"
    },
    "boardgamegeek": {
        "link": "^boardgamegeek\\.com/image/(\\d+).*",
        "url": "//api.geekdo.com/api/images/$1",
        "res": ":\n$._=JSON.parse($._)\nreturn [[['#'+$._.images.original.url, $._.images.large.url], '['+$._.postdate+'] ' + $._.caption]]",
        "img": "^cf\\.geekdo-images\\.com/(?:[^/?]+/)+?pic(\\d+).*"
    },
    "taobao": {
        "img": "^((?:img[^.]*|g(?:[^.]*\\.?){1,2}?|asearch|\\w\\w\\d\\d)\\.(?:taobao|tb|ali)cdn\\.c(?:om|n)/)(.+)_\\d+x\\d+.+",
        "to": "$1$2"
    },
    "jd.com": {
        "img": "^(img\\d+\\.360buyimg\\.com/+)[^/]+/(?:[^_/]+_)?(jfs/)",
        "to": "$1shaidan/$2"
    },
    "ceneo.pl": {
        "img": "^(image\\.ceneo\\.pl/data/products/\\d+/)[^i]",
        "to": "$1i"
    },
    "apropomedia.ro": {
        "img": "^(?:(storage\\d+\\.dms\\.mpinteractiv\\.ro/media/(?:\\d+/)+[^?]+)\\?|(cache\\.(tare|apropo)\\.ro/[\\da-z]{13})/operation=(?:resize|crop)).+",
        "to": "$1$2"
    },
    "wykop.pl": {
        "img": "^((?:x\\w\\.)?(?:cdn\\d+\\.imgwykop\\.pl|wykop.pl/cdn)/c\\d+/[^,]+),[^.]+",
        "to": "$1"
    },
    "bugzilla": {
        "link": "^bug(?:s|zilla).[^/]{5,20}/attachment\\.cgi\\?id=\\d+$",
        "to": ":\nvar p = this.node.parentNode, p = p&&p.parentNode; p = p && p.querySelector('.bz_attach_extra_info,.attach-info');\nreturn p && ~p.textContent.indexOf('image/') || /\\.(jpe?g|png|gif|bmp|web[mp]|svg)$/i.test(this.node.title) ? $[0] : ''"
    },
    "natgeo": {
        "img": "^((?:images\\.)?nationalgeographic\\.com/)(?:(content/dam/.+\\.)adapt[\\d.]+|((?:dc/)?exposure/(?:[^/]+/)+?image/[^./]+_)\\d+x\\d+)",
        "to": ":\nreturn $[1]+($[2]||$[3]+'0x0')"
    },
    "apod": {
        "link": "^apod\\.nasa\\.gov/apod/(?:a(?:stropix|p\\d{6})\\.html)?$",
        "res": ":\nvar i=$._.match(/<br>\\s*<a href=\"(image\\/[^\"]+)\"[^<]+<img src=\"([^\"]+)/i);\nreturn i && [[[\"#\" + $.base + i[1], $.base + i[2]], $._.match(/Explanation:?\\s*<\\/[^>]+>:?\\s*([\\s\\S]+?)<p>/)[1].trim().replace(/<[^>]+>/g, '')]] || null;"
    },
    "hubblesite": {
        "img": "^(imgsrc\\.hubblesite\\.org/hu/db/images/hs-\\d{4}-\\d{2}-[a-z]-)(?:(?:mini_|wallpaper_)?thumb|web(?:_print)?|(?:small|x?large)_web)",
        "to": "#$1full_jpg\n#$1print\n$1large_web_jpg"
    },
    "weibo": {
        "img": "^((w[a-z]|tva|mu)\\d\\.sinaimg\\.cn/)(?!large)[^/]+/(.+)",
        "to": ":\nreturn ($[2]=='mu' ? 'http://' : $[1]+'large/') + $[3]"
    },
    "douban": {
        "img": "^(img\\d+\\.douban(?:io)?\\.com/)(?:(view/|img/)(?:photo|movie_poster_cover|(thing_review|commodity_story|celebrity))/(?!large)[^/]+|(icon/u(?=\\d))|[sm](?=pic/))",
        "to": ":\nreturn $[1] + ($[2] ? $[2] + ($[3]||'photo') + '/#large photo#' : (($[4]||'') + 'l'));"
    },
    "zhimg": {
        "img": "^(pic\\d\\.zhimg\\.com/)(?:\\d+/)?((?:v\\d-)?[\\da-f]{9,32})[^.]+",
        "to": "$1$2"
    },
    "tieba.baidu": {
        "img": "^((?:imgs\\w+|[a-z].hiphotos)\\.baidu\\.com/(?:forum|image)/)[^=]+=[^/]+/([\\da-f]{40}.+)",
        "to": "$1pic/item/$2"
    },
    "xueqiu": {
        "img": "^((?:x(?:avatar|qimg|photo)\\.imedao|photo\\.xueqiu)\\.com/[^!]+)!.*",
        "to": "$1"
    },
    "huaban.com": {
        "img": "^((?:hbimg\\.b\\d.upaiyun\\.com|img\\.hb\\.aicdn\\.com)/[\\da-f]+-[^_]+).*",
        "to": "#$1\n$1_fw658"
    },
    "mobypicture": {
        "useimg": 1,
        "link": "^(?:m\\.)?moby(?:picture\\.com/user/[^/]+/view|\\.to)/\\d+$",
        "url": "//api.mobypicture.com/oEmbed?url=$&",
        "res": "(?:;file=|<url>)([^<&]+)\n<title>([^<]+)</title>",
        "img": "^([ab]\\d\\.img\\.mobypicture\\.com/[\\da-f]{32}_|moby\\.to/[\\da-z]+:)(?:full|square|view|medium|thumbnail|thumb)",
        "to": "#$1full\n$1large"
    },
    "pixnet.net": {
        "img": "^(?:pic|s\\d?)(\\.pimg\\.tw/)(?:album/)?([^/]+)/(?:element/\\d+_)?([^/_]+)(?:/[^/]+/)?(?:_[nbstq]|\\d+x\\d+).+",
        "to": "#pic$1$2/$3.#jpg png#\npic$1$2/$3_b.#jpg png#"
    },
    "pixnet-proxy": {
        "img": "^imageproxy\\.pimg\\.tw/zoomcrop\\?url=([^&]+).*",
        "dc": 2,
        "loop": 2,
        "to": "$1"
    },
    "imgbox": {
        "link": "^(imgbox\\.com/)(?!privacy|register)([^/.]{6,10})$",
        "url": "$1$2",
        "res": "href=\"([^\"?]+)\\?download",
        "img": "^(?:(?:hcd-\\d|t\\d*|(?:\\d[.-])?[is]|thumb(s\\d*))\\.)(imgbox\\.com/[^._]+)[^.]*",
        "to": ":\nreturn $[1]?'image'+$[1]+'.'+$[2]+'_o':'i.'+$[2]"
    },
    "yandisk": {
        "img": "^\\d\\.downloader\\.disk\\.yandex\\.(?:com|ru)/preview/[\\da-f]{64}/inf/[^?]+\\?(?:[^&]+&)*?(?:content_type=image).+",
        "to": ":\nreturn $[0].replace(/&crop=[^&]*/, '').replace(/(&size=)[^&]+/, '$110000x10000')"
    },
    "foto.mail.ru": {
        "img": "^(?:(?:img\\d*\\.)?(?:content(?:-\\d+)?\\.)?(?:f|ph)(oto\\.(?:my\\.)?mail\\.ru/)(?:images/)?((?:mail|bk|list|corp|community)[/=][^/=]+[/=][^/=]+[/=])(?:s?p|ii?)(-\\d+)|filed\\d+-\\d+\\.my\\.mail\\.ru/pic\\?url=([^&]+).*)",
        "to": ":\nreturn $[4] ? decodeURIComponent($[4]).replace(/\\/i(-\\d+\\.[^?]+).*/, '/h$1') : 'content.f' + $[1] + $[2].replace(/=/g, '/') + 'h' + $[3];"
    },
    "gallery.ru": {
        "img": "^(data\\d+\\.(?:i\\.)?gallery\\.ru/albums/gallery/\\d+-[\\da-f]+-\\d+-)[^.-]+",
        "to": "#$1\n$11024"
    },
    "radikal.ru": {
        "link": "^radikal\\.ru/\\w/([si]\\d+\\.radikal\\.ru/(?:i\\d+/)?\\d{4}/[\\da-f]{2}/[\\da-f]{12})\\..+",
        "img": "^([si]\\d+\\.radikal\\.ru/(?:i\\d+/)?\\d{4}/[\\da-f]{2}/[\\da-f]{12})[xt]\\..+",
        "to": "$1.#jpg png gif#"
    },
    "svadba.pro": {
        "img": "^(svadba\\.pro/images/(?:users/avatar|(photo))s/)(?:small|mini|medium)/([\\da-f]{32})",
        "to": ":\nreturn $[1] + ($[2] ? 'medium/': '/') + $[3];"
    },
    "lostfilm.info": {
        "img": "^(lostfilm\\.info/images/)\\d+",
        "to": "$1"
    },
    "imagebam": {
        "link": "^(imagebam\\.com/)image/([\\da-f]+).*",
        "url": "http://www.$1image/$2",
        "res": "=\"og:image\" content=\"([^\"]+)",
        "img": "^thumbnails\\d*\\.(imagebam\\.com/)\\d+/([\\da-f]+).*"
    },
    "imageban.ru": {
        "useimg": 1,
        "link": "^imageban\\.ru/show/\\d{4}/",
        "res": "src=\"(http://i\\d+\\.imageban\\.ru/out/[^\"]+)",
        "img": "^(i\\d+\\.imageban\\.ru)/thumbs/(\\d{4})\\.(\\d\\d)\\.(\\d\\d)/",
        "to": "$1/out/$2/$3/$4/"
    },
    "itmages.ru": {
        "useimg": 1,
        "link": "^(?:(itmages\\.ru/image/)(?:pre)?(view/\\d+/[^/]+)|(itmag\\.es/\\w{4,}))",
        "url": "$1$2$3",
        "res": "<img id=\"image\".+?src=\"([^\"]+)",
        "img": "^(?:(storage\\d+\\.static\\.itmages\\.ru/i/\\d\\d/\\d{4}/)s_|itmages\\.ru/thumbnails/get\\?server=(storage\\d+)&uri=([^&]+).*)",
        "to": ":\nreturn $[2] ? $[2] + '.static.itmages.ru/' + decodeURIComponent($[3]) : $[1] + 'h_';"
    },
    "all-poster.ru": {
        "link": "^(all-poster\\.ru)/\\?v=(.+)",
        "img": "^(all-poster\\.ru)/thumbs/(.+)",
        "to": "$1/images/$2"
    },
    "fastpic.ru": {
        "link": "^fastpic\\.ru/view/(\\d+)/(\\d{4}/\\d+)/(.?[\\da-f]{30}([\\da-f]{2})).+",
        "img": "^i(\\d+)\\.fastpic\\.ru/thumb/(\\d{4}/\\d+)/[\\da-f]{2}/(.?[\\da-f]{30}([\\da-f]{2})).+",
        "to": "http://i$1.fastpic.ru/big/$2/$4/$3.#jpg png gif jpeg#?noht=1"
    },
    "piccy.info": {
        "link": "^(piccy\\.info/view3/\\d+/[\\da-f]{32})/",
        "url": "$1/orig",
        "res": "src=\"(http://i\\.piccy\\.info/[^\"]+)"
    },
    "hostingkartinok": {
        "useimg": 1,
        "link": "^(?:hostingkartinok\\.com/show-image\\.php\\?id=[\\da-f]{32}|(?:hkar\\.ru|smotr\\.im)/\\w+)",
        "res": "<div class=\"image\">\\s*<a href=\"([^\"]+)\"",
        "img": "^(s\\d+\\.hostingkartinok\\.com/uploads)/thumbs/([^.]+\\.)png",
        "to": "$1/images/$2#jpg jpeg png gif bmp#"
    },
    "4put.ru": {
        "useimg": 1,
        "link": "^(4put\\.ru/)(?:pics/(?:[^/]+/)+?(?:small|max)_|view-max-picture\\.php\\?id=)(\\d+).*",
        "url": "$1view-max-picture.php?id=$2",
        "res": "<IMG SRC=\"([^\"]+/$2\\.[^\"]+)",
        "img": "^(4put\\.ru/pictures/)(?!max)[^/]+(/\\d+/\\d+)",
        "to": "$1max$2"
    },
    "pic[45]you.ru": {
        "useimg": 1,
        "link": "^(pic(?:area|age|[45]you)\\.ru/(\\d+/\\d+)).*",
        "loop": 1,
        "url": "$1/",
        "res": "<img src=\"(http://(?:s\\d+\\.)?pic[45]you\\.ru/(?:allimage/)?(?:y2\\d+/[\\d-]+|allimage)/$2[^\"]+)",
        "img": "^((?:s\\d+\\.)?pic[45]you\\.ru/(?:allimage/)?y\\d+/[\\d-]+/[^-]+)-[^.]+",
        "to": "$1"
    },
    "piccash.net": {
        "useimg": 1,
        "link": "^(piccash\\.net/\\d+/\\d+).*",
        "url": "$1/1",
        "res": "<a href=\"(/allimage/[^\"]+)",
        "img": "^(piccash\\.net/allimage/\\d{4}/\\d+-\\d+/img_)thumb(/\\d+)-thumb",
        "to": "$1full$2"
    },
    "pic-money": {
        "useimg": 1,
        "link": "^pic-money\\.ru/\\w+\\.html",
        "loop": 1,
        "res": "<img src=\"([^\"]+)\">",
        "img": "^(pic-money\\.ru/img/\\d+/\\d+/\\d+/\\d+)t",
        "to": "$1"
    },
    "pixs.ru": {
        "link": "^pix(?:venue\\.com|s\\.ru)/showimage/[^?]+\\.(jpe?g|png|gif|bmp)",
        "ci": 1,
        "res": "id=\"imgg\" src=\"([^\"]+)",
        "img": "^(i\\d*\\.pixs\\.ru/)thumbs(.+\\.)jpg",
        "to": "$1storage$2#jpg png gif bmp#"
    },
    "photoshare.ru": {
        "useimg": 1,
        "link": "^photoshare\\.ru/photo\\d+\\.html$",
        "res": "=\"(http://\\d+\\.r\\.photoshare[^\"]+)",
        "img": "^(photoshare\\.ru/data/\\d+/\\d+/)[^\\D5]/",
        "to": "$15/"
    },
    "jpegshare": {
        "link": "^(?:jpegshare\\.net/(?:code/)?[\\da-f/]{38}\\.[^.]+\\.html|(jpeg\\.im/\\w+))",
        "res": "<img src=\"([^\"]+)",
        "img": "^(jpegshare\\.net/)thumbs/([\\da-f/]{38}).*",
        "to": "$1images/$2.#jpg png gif#"
    },
    "turboimagehost": {
        "link": "^turboimagehost.com/p/\\d+/.*",
        "res": "=\"og:image\" content=\"([^\"]+)"
    },
    "ipfs.pics": {
        "link": "^(ipfs\\.pics/)(Q\\w{45}).*",
        "img": "^(ipfs\\.pics/)ipfs/(Q\\w{45}).*",
        "to": "$1ipfs/$2"
    },
    "dropbox": {
        "link": "^(dropbox\\.com/[su]h?/[^?]+\\.(?:jp(?:g|eg?)|a?png|gif|svgz?|bmp|web[pm]|og[gv]|j(?:if|fif?))).*",
        "ci": 1,
        "to": "https://dl.$1"
    },
    "cl.ly": {
        "link": "^cl\\.ly/image/([^/]+).*",
        "res": "=\"og:image\" content=\"([^\"]+)\n<title>([^<]+)",
        "img": "^thumbs\\.(?:cl\\.ly|getcloudapp\\.com)/(?:image/)?(\\w+)",
        "to": "http://cl.ly/image/$1/$1.jpg"
    },
    "prntscr": {
        "link": "^prnt(?:\\.sc|scr\\.com)/[\\da-z]{5,7}(\\..*)?$",
        "res": "=\"og:image\" content=\"([^\"]+)",
        "img": "^img\\.prntscr\\.com/img\\?url=([^&]+).*",
        "to": "$1"
    },
    "gyazo": {
        "link": "^(gyazo\\.com/)([\\da-f]{32}).*",
        "img": "^(i\\.)?(gyazo\\.com/)thumb/([\\da-f]{32}).*",
        "to": "i.$1$2.#png jpg gif#"
    },
    "ffx-ss": {
        "link": "^screenshots\\.firefox\\.com/.+",
        "res": ":\n$=JSON.parse($._.match(/\">({\"[^\\n]+)</)[1])\nreturn [$.downloadUrl.replace(/\\?.*/, ''), [$.buildTime, $.title, $.urlIfDeleted].join(' | ')]"
    },
    "puu.sh": {
        "link": "^(puush\\.me/[^/]+/Gallery)$",
        "url": "$1/feed",
        "res": ":\ntry {\n $ = JSON.parse($._).objects, i = $.length, u = '//puu.sh/';\n while(i--) $[i] = [u + $[i].id + '/' + $[i].name, null, u + 't/' + $[i].id];\n return $;\n} catch (ex) {return null}",
        "img": "^(puu\\.sh/)(?:t/)?(.+)",
        "to": "$1$2"
    },
    "tinypic": {
        "useimg": 1,
        "link": "^(?:(?:e[ns]|fr|it|de|nl|p[tl]|sv)\\.)?tinypic\\.com/(view\\.php\\?pic=|r/)[\\da-z]+",
        "res": "class=\"thickbox\"\\s*>\\s+<img src=\"(http://[^\"]+)",
        "img": "^(o?[si]\\d+\\.tinypic\\.com/[\\da-z]+)_th",
        "to": "$1"
    },
    "ImgFlixTC": {
        "link": "^(?:img|flix)tc.com/(w/)?(?!register)\\w{7}",
        "res": "(?:\" value|=\"og:video:secure_url\" content)=\"([^\"]+)",
        "img": "^(i\\.imgtc\\.com/)(\\w+)\\.",
        "to": "$1i/$2."
    },
    "imagevenue": {
        "link": "^(img\\d+\\.imagevenue\\.com/)img\\.php\\?(?:[^&]+&)*?image=([^&]+).*",
        "url": "$1img.php?image=$2",
        "res": "SRC=\"([^\"]+)",
        "img": "^(img\\d+\\.imagevenue\\.com/)[^/]+/th_(.+)"
    },
    "im9.eu": {
        "link": "^(im9\\.eu/)(?:picture|animation)/([\\da-z-]+).*",
        "url": "api.$1stat/?image=$2",
        "res": "FILE: (\\S+)",
        "img": "^t\\.(im9\\.eu/)([\\da-z-]+).*"
    },
    "directupload.net": {
        "useimg": 1,
        "link": "^(?:s\\d+\\.)?directupload\\.net/file/[a-z]/\\d+/",
        "res": "\"og:image\" content=\"([^\"]+)\n\"og:description\" content=\"([^\"]+)",
        "img": "^((?:f?s\\d+b?\\.)?directupload\\.net/images/(?:user/)?\\d+/)temp/",
        "to": "$1"
    },
    "pic-upload.de": {
        "link": "^pic-upload\\.de/view-\\d+",
        "res": "' src='([^']+)"
    },
    "postimage": {
        "link": "^(postima?ge?\\.org/)image(?:\\.php\\?v=|/)([\\w-]+)(?:/.*)?$",
        "url": "https://$1image/$2",
        "res": "<a href=\"(h[^?\"]+\\?dl=1)",
        "img": "^s\\d+\\.(postima?ge?\\.org/)([\\da-z]+)/[^/]+"
    },
    "upload.ee": {
        "useimg": 1,
        "link": "^(upload\\.ee/)gallery/\\d+/[^?]+\\?vid=(\\d+).*",
        "res": "=\"(https?://www.$1image/$2[^\"]+)",
        "img": "^(upload\\.ee/)(?:thumb|preview|files)(/.+\\.(?:jpe?g|a?png|gif|bmp))(\\.html)?$",
        "ci": 2,
        "to": "$1image$2"
    },
    "pixhost.org": {
        "useimg": 1,
        "link": "^pixhost\\.org/show/\\d+/",
        "res": "=\"image-img\" src=\"([^\"]+)",
        "img": "^t(\\d+\\.pixhost\\.org/)thumb(s/.+)",
        "to": "img$1image$2"
    },
    "imgchili": {
        "useimg": 1,
        "link": "^imgchili\\.(?:com|net)/show/\\d+/",
        "res": "src=\"(http://i\\d+\\.imgchili[^\"]+)",
        "img": "^[tg](\\d+\\.imgchili\\.(?:com|net)/)",
        "to": "i$1"
    },
    "imx.to": {
        "link": "^(imx\\.to/)i(/\\w+)",
        "url": "$1i$2 :imgContinue=",
        "res": "=\"centred\" src=\"([^\"]+)\"(?:\\salt=\"([^\"]+))?",
        "img": "^t\\.(imx\\.to/)t/\\d+/\\d\\d/\\d\\d(/\\w+).*"
    },
    "imgcris": {
        "link": "^imgcris\\.com/\\w+",
        "res": "<img src=\"([^\"]+)"
    },
    "picturepush": {
        "img": "^((?:www\\d?\\.)?picturepush\\.com/photo/\\w/\\d+/)(?!img)[^/]+(/[^?]+).*",
        "to": "$1640$2"
    },
    "xkcd": {
        "link": "^(?:m\\.)?(xkcd\\.(?:org|com)/\\d{1,5})/?$",
        "url": "$1/info.0.json",
        "res": ":\nif ($._[0] != '{') $ = null;\nelse $ = JSON.parse($._), $ = [$.img, [$.year, ('0'+$.month).slice(-2), ('0'+$.day).slice(-2)].join('-') + ' | ' + $.safe_title + ' - ' + $.alt + ' ' + $.link];\nreturn $;"
    },
    "explosm.net": {
        "link": "^explosm\\.net/(?:rcg$|comics/\\d+)",
        "res": "=\"og:image\" content=\"([^\"]+)\n<a href=\"/comics/\\d+\">(\\d{4}\\.\\d\\d\\.\\d\\d)[^\"]+[^>]+>([^<]+)"
    },
    "smbc-comics": {
        "link": "^smbc-comics\\.com/(?:comic/|(?:index\\.php)?\\?(?:db=comics(?:_[^&]+)?&)?id=\\d+)",
        "res": "\" src=\"([^\"]+)\" id=\"cc-comic\""
    },
    "twogag": {
        "link": "^twogag\\.com/archives/\\d+$",
        "res": "<img\\s+src=\"([^\"]+)\" alt=\"([^\"]+)\"",
        "img": "^(twogag\\.com/comics)-rss/",
        "to": "$1/"
    },
    "questionablecontent": {
        "link": "^questionablecontent\\.net\\.?/view\\.php\\?comic=(\\d+).*",
        "to": "questionablecontent.net/comics/$1.#png jpg gif#"
    },
    "gettyimages": {
        "link": "^gettyimages\\.com(?:\\.au)?/detail/[^/]+/[^/]+/(\\d+).*",
        "img": "^(?:media\\.gettyimages\\.com/[^/]+|cache\\d+\\.asset-cache\\.net/xr)/(?:[^?]+?-id)?([\\d+-]+).*",
        "to": "//media.gettyimages.com/photos/-id$1"
    },
    "panoramio": {
        "link": "^(?:google\\.[^/]+/[^?]+\\?(?:[^&]+&)*?photoid=po-|panoramio\\.com/photo/)(\\d+).*",
        "img": "^(?:mw\\d\\.google\\.com/mw-panoramio|static\\.panoramio\\.com(?:\\.storage\\.googleapis\\.com)?)/photos/[^/]+/(\\d+)\\.jpg",
        "to": "#http://static.panoramio.com/photos/original/$1.jpg\nhttp://static.panoramio.com/photos/large/$1.jpg"
    },
    "wikimapia.org": {
        "img": "^(photos\\.wikimapia\\.org/p/[^_]+_(?!big))[^.]+",
        "to": "$1big"
    },
    "wallhere": {
        "link": "^(wallhere\\.com/)\\w\\w/(wallpaper)/(\\d+).*",
        "img": "^c\\.(wallhere\\.com/)photos/\\w\\w/\\w\\w/([^.]+)-(\\d+).*",
        "to": "get.$1photo/$2-$3.jpg"
    },
    "wallhaven": {
        "link": "^(alpha\\.(wallhaven)\\.cc/wallpaper)/(\\d+).*",
        "img": "^(alpha\\.(wallhaven)\\.cc/wallpaper)s/(?!full/)[^-]+-(\\d+).+",
        "to": "$1s/full/$2-$3.#jpg png#"
    },
    "photozou.jp": {
        "img": "^((?:kura|art)\\d+\\.photozou\\.jp/pub/\\d+/\\d+/photo/\\d+).*\\.",
        "to": "$1_org."
    },
    "tuchong.com": {
        "link": "^(?:[^.]+\\.(tuchong\\.com/)(\\d+)|(tuchong\\.com/)\\d+/(\\d+))(?!/?#image\\d+).*",
        "url": "//$1$3rest/posts/$2$4",
        "res": ":\nvar p,d='http://photos.'+($[1]||$[3])\n$ = JSON.parse($._)\nif(!$||!$.images)return null\np=$.post?[$.post.title, $.post.exerpt].filter(Boolean).join(' - '):'';\np = p ? '['+p+' by '+$.post.author.name+'] ':''\n$=$.images\nreturn $&&$.length ? $.map(function(x,i) {\n return [d + x.user_id + '/f/' + x.img_id + '.jpg', (!i&&p ? p : '')+[x.title, x.description].filter(Boolean).join(' - ')]\n}) : null",
        "img": "^(photos\\.tuchong\\.com/\\d+/)(?!f/)[^/]+",
        "to": "$1f"
    },
    "500px": {
        "link": "^(?:photos\\.)?(500px\\.)com/(?:photo/)?(\\d+)(/[^/?]+)?(?:\\?.*|/?$)",
        "url": "https://$1com/photo/$2$3",
        "res": ":\nvar x=$._.match(/window\\.PxPreloadedData\\s=\\s(\\{[^\\n]+\\})/),u={};\nif(!x)return null\nx=JSON.parse(x[1]).photo\nx.images.forEach(function(i){u[i.size]=i.url})\nreturn [[['#'+u[2048], u[34]], x.name + ' by ' + x.user.username]]",
        "img": "^(?:pp?|drs)cdn\\.(500px\\.)org/+(?:photo/)?(\\d+)()/+[^/]+/.+"
    },
    "artlimited": {
        "img": "^(artlimited\\.net/+(?:user/(?:\\d/){7}|picbase/news/|agenda/image/)artlimited_[^_]+)_[^.]+",
        "to": "$1"
    },
    "modelmayhem": {
        "useimg": 1,
        "link": "^modelmayhem\\.com/portfolio/pic/\\d+",
        "res": "=\"og:image\" content=\"([^\"]+)\n=\"og:description\" content=\"([^\"]+)",
        "img": "^(photos\\.modelmayhem\\.com/(?:photo|cover|potd/entrant|avatar)s(?:/\\d+)+/[^.]+)(?:_[^.]+|-small)\\.",
        "to": "$1# -big _m#."
    },
    "smugmug": {
        "img": "^[^.]+\\.smugmug\\.com/.+(?:T[ih]|S|M|L|X[2L]|\\d+x\\d+)(?:-\\d)?\\.[^.]{3,4}$",
        "to": ":\nreturn $[0].replace(/(?:(\\/)(?:T[ih]|S|M|L|X[2L]|\\d+x\\d+)(\\/)|(-)(?:T[ih]|S|M|L|X[2L]|\\d+x\\d+)([.\\/]))/g, '$1$3X3$2$4');"
    },
    "digart.pl": {
        "img": "^(digart\\.img\\.digart\\.pl/data/img/vol\\d+/\\d+/\\d+)/(?!download)[^/]+/(.+)",
        "to": "$1/download/$2\n$1/miniaturki400/$2"
    },
    "photosight.org": {
        "useimg": 1,
        "link": "^(photosight\\.org/)(?:photo|viewpicwindow)\\.php\\?photoid=(\\d+)",
        "url": "$1viewpicwindow.php?photoid=$2",
        "res": "border=0 src=\"([^\"]+)",
        "img": "^(photosight\\.org/)t(up/\\d\\d(?:\\d\\d/){3})[^_]+_",
        "to": "$1$2"
    },
    "photosight.ru": {
        "useimg": 1,
        "link": "^photosight\\.ru/photos/\\d+",
        "res": "id=\"big_photo\" href=\"([^\"]+)\"\nalt=\"([^\"]+)\" id=\"big_photo\"",
        "img": "^(?:(?:icon\\.)?s|img-([^.]+))(\\.photosight\\.ru/)(?:img/([\\da-z]+)/)?([\\da-z]{3}/\\d+_)(?!xlarge)[^.]+",
        "to": "img-$1$3$2$4#x #large"
    },
    "photo-forum.net": {
        "img": "^(photo-forum\\.net/)(?:static/)?(?:site|imgs)_thumbs[^/]*/(.+)",
        "to": "//$1static/site_pics/$2"
    },
    "1x": {
        "useimg": 1,
        "link": "^1x\\.com/photo/(\\d+)",
        "res": ":\nvar r = $._.match(RegExp(\"\\\\('\"+ $.url[0].match(/[^\\/]\\/(\\d+)/)[1] +\"','(?:\\\\w*',')+?/(images/user/[\\\\da-f]{32}[^']+)\"));\nreturn r && $.base.slice(0,$.base.indexOf('/',13)+1) + r[1];",
        "img": "^(1x\\.com/images/user/[\\da-f]{32}-)(?:s[dq]|ld)(?=\\.)",
        "to": "#$1#hd2 hd4 sd2 sd4#\n$1sd"
    },
    "photoforum.ru": {
        "img": "^(photoforum\\.ru/f/p(?:hoto|ortr))\\.(?:50|75|th(?:sq)?)(/\\d{3}/\\d{3}/\\d+_\\d+)(?:\\.th(?:sq)?)?",
        "to": "$1$2"
    },
    "photographysites": {
        "img": "^(photographysites\\.com/uploads/gallery/[^/]+/)(?!gallery)[^_]+_",
        "to": "$1"
    },
    "23hq": {
        "useimg": 1,
        "link": "^23hq\\.com/[^/]+/photo/\\d+(\\?.*)?$",
        "res": "<img id=\"fn_img\" src=\"([^\"]+)\"",
        "img": "^(23hq\\.com/\\d+/\\d+_[\\da-f]{32}_)(?!large)[^\\.]+",
        "to": "$1large1k",
        "note": "http://www.23hq.com/-name-/photo/-id-/original|large"
    },
    "photo.net": {
        "link": "^photo\\.net/photo(?:db/photo\\?photo_id=|/)(\\d+).*",
        "img": "^(?:d6d2h4gfvy8t8\\.cloudfront\\.net|thumbs\\.photo\\.net/photo)/(\\d+)-sm.+",
        "to": "//d6d2h4gfvy8t8.cloudfront.net/$1-#orig lg#.jpg"
    },
    "fotki": {
        "img": "^(images\\d+\\.fotki\\.com/v\\d+/photos/(?:\\d+/){3}.+)-th\\.(jpe?g|png|gif).*",
        "ci": 2,
        "to": "$1-vi.#$2 png gif#"
    },
    "pbase": {
        "link": "^(pbase\\.com/)(?:[^/]+/)?image(/\\d+).*",
        "url": "$1image$2/original",
        "res": "class=\"display\" src=\"([^\"]+)\"",
        "img": "^m\\d\\.i\\.(pbase\\.com/).+(/\\d+).*"
    },
    "ipernity": {
        "link": "^ipernity\\.com/doc/[^/]+/\\d+",
        "res": ":\nvar i=($._.match(/var bulb = \\{\"url\":\"([^\"]+)/) || [])[1];\nreturn !i || [i.replace(/\\\\/g, ''), $._.match(/<title>ipernity: (.+?)<\\/title>/)[1]];",
        "img": "^(u\\d+\\.ipernity\\.com/\\d+/\\d+/\\d+/\\d+\\.[\\da-f]{8}\\.)(?:75x|100|240|500)",
        "to": "$1560"
    },
    "aminus3": {
        "img": "^((?:aminus3(?:\\.s3\\.amazonaws)?|img\\.aminus2)\\.com/image/g\\d+/u\\d+/i\\d+/[\\da-f]{32}_)(?!large)[^\\.]+(.+)",
        "to": "$1giant$2"
    },
    "jpgmag": {
        "useimg": 1,
        "link": "^jpgmag\\.com/(?:spotlight/click|photos)/\\d+",
        "loop": 1,
        "res": "=\"image_src\" href=\"([^\"]+)",
        "img": "^(8020\\.photos\\.jpgmag\\.com/\\d+_\\d+_[\\da-f]+_)[lmnst]",
        "to": "$1p"
    },
    "dpchallenge": {
        "img": "^(images\\.dpchallenge\\.com/images_[^/]+/\\d+-\\d+/\\d+/)120/",
        "to": "$1800/"
    },
    "photoblink": {
        "img": "^(photoblink\\.com/images/\\w+/)th(/pb\\d+[^.]+)_[^.]+",
        "to": "$1im$2"
    },
    "trekearth": {
        "img": "^(i\\d\\.trek(?:lens|earth)\\.com/photos/\\d+/.+)_s\\d?_",
        "to": "$1"
    },
    "imageevent": {
        "img": "^(photos\\.imageevent\\.com/(?:[^/]+/)+?)(?:icons|small|websize)/(.+)",
        "to": "$1/$2"
    },
    "ning.com": {
        "img": "^(api\\.ning\\.com/files/[\\w-*]+/[^?]+)\\?.+",
        "to": "$1"
    },
    "discogs": {
        "link": "^discogs\\.com/(?:artist|release)/\\d+[\\w-]*/images",
        "res": ":\nvar r = [];\n($._.match(/https:\\/\\/img\\.discogs\\.com\\/[^\"]+\\.jpeg\\.jpg/g) || r).forEach(function(i) {r.push([i]);});\nreturn r;"
    },
    "fanart.tv": {
        "img": "^(fanart\\.tv/)thumb\\.php\\?src=(?:https?://\\1|/)?([^&]+).*",
        "to": "$1$2"
    },
    "nexusmods": {
        "img": "^(staticdelivery\\.nexusmods\\.com/(?:mods|images)/(?:[^/]+/)+?)thumbnails/",
        "to": "$1"
    },
    "weheartit": {
        "useimg": 1,
        "link": "^weheartit\\.com/entry/(\\d+).*",
        "url": "weheartit.com/entry/$1",
        "res": "<meta content=\"([^\"]+)\" property=\"og:image\"\n<title>([^|<]*)",
        "img": "^data\\d*\\.whicdn\\.com/images/(\\d+)/(?!original\\.).*"
    },
    "gifbin": {
        "link": "^(gifbin\\.com/)(?:[ft]/|(reverse/))?(\\d+)$",
        "url": "$1$2$3",
        "res": ":\nvar t,u=$._.match(/src=\"https?:\\/\\/www\\.gifbin\\.com\\/bin\\/[^\"]+/g)\nif(!u)return 0\nt=$._.match(/=\"og:title\"\\s+content=\"([^\"]+)/);\nreturn [[u.slice(0,3).map(function(u){ return u.slice(5) }), t&&t[1]]]",
        "img": "^(gifbin\\.com/bin/(?:\\d+/)?)tn_([^?]+\\.).*",
        "to": "http://www.$1$2#webm mp4 gif#"
    },
    "makeagif": {
        "useimg": 1,
        "link": "^(makeagif\\.com/)(?:i/|gif/[^?/]+)?([\\w-]{6})(?:$|\\?.*)",
        "url": "//$1i/$2",
        "res": "data-src=\"([^\"]+)\"\n--elips\"\\s+title=\"([^\"]+)",
        "img": "^(?:cdn\\.|i\\.)?(makeagif\\.com/media/\\d+-\\d+-\\d{4}/)t([\\w-]{6}).*",
        "to": "//i.$1$2.#mp4 gif#"
    },
    "giphy": {
        "useimg": 1,
        "link": "^(g(?:iphy\\.com/(?:gifs|embed)|ph\\.is)/)([\\w-]+).*",
        "url": "$1$2",
        "res": ":\n$=/gif:\\s*(\\{[^\\n]+\\})/.exec($._)\n$=$&&JSON.parse($[1])\nreturn $ && [[[$.images.original.mp4, $.images.original.url], $.alt_tag]]",
        "img": "^media\\d?\\.((giphy)\\.com/)media/(\\w+)/.*",
        "to": "media.$1media/$3/$2.#mp4 gif#"
    },
    "gifly": {
        "link": "^(gifly\\.com/)(\\w)(\\w)(\\w)(\\w)/*[^/]*$",
        "img": "^(?:i\\.)?(gifly\\.com/+)media_gifly/(\\w)/(\\w)/(\\w)/(\\w)/b/.*",
        "to": "$1media_gifly/$2/$3/$4/$5/b/$2$3$4$5.#mp4 gif#"
    },
    "pr0gramm": {
        "img": "^thumb(\\.pr0gramm\\.com/\\d{4}/\\d\\d/\\d\\d/[\\da-f]{16}\\.).+",
        "to": "img$1#jpg png gif#\nvid$1mp4"
    },
    "logs.omegle": {
        "link": "^logs(\\.omegle\\.com/[\\da-f]+)",
        "to": "l$1.png"
    },
    "webfail": {
        "link": "^(?:en|de)\\.(webfail\\.com/)([\\da-f]{11})$",
        "img": "^cdn\\.(webfail\\.com/)upl/img/([\\da-f]{11})/(?!post).+",
        "to": "cdn.$1upl/img/$2/post2.jpg"
    },
    "hizliresim": {
        "link": "^hizliresim\\.com/(a/)?\\w{6}\\W*$",
        "res": ":\nvar t=$._.match(/=\"og:description\" content=\"([^\"]+)/),\nm=$._.match(/=\"og:image\" content=\"([^\"]+)/)\nif(!$[1]) return m ? [m[1], t&&t[1]] : null\nm=$._.match(/<img data-src=\"[^\"]+/g)\nreturn !m ? null : m.map(function(x, i) {\n return [x.slice(15), !i&&t&&t[1]]\n})",
        "img": "^([gt])(\\.hizliresim\\.com/[^.]+)-(?:\\d+x\\d+|s)",
        "to": ":\nreturn ($[1]=='t'?'i':'g') + $[2]"
    },
    "demotivators.to": {
        "useimg": 1,
        "link": "^demotivators\\.(?:to|ru)/posters/\\d+/",
        "res": "<img id=\"poster\" src=\"(/media/posters/[^\"]+)",
        "img": "^(demotivators\\.(?:to|ru)/)media/(posters/\\d+/\\d+)_([^.]+\\.)thumbnail\\..*",
        "to": "$1media/$2_$3#jpg png#"
    },
    "knowyourmeme": {
        "useimg": 1,
        "link": "^knowyourmeme\\.com/photos/\\d+-\\w+",
        "res": "content='([^']+)' itemprop='thumbnailUrl'\ncontent='([^']+)' itemprop='headline'",
        "img": "^(i\\d+\\.kym-cdn\\.com/(?:entries/icon|photos/image)s/)(?!original)[^/]+",
        "to": "$1original"
    },
    "memegenerator.net": {
        "link": "^(?:(?:ru|es)\\.)?memegenerator\\.net/(instance)/(\\d+)(\\d{3}).*",
        "img": "^cdn\\.meme(?:\\.am|generator\\.net)/(?:cache/)?(instance)s/(?:folder\\d+/)?\\d+x\\d*/(\\d+)(\\d{3}).*",
        "to": "https://cdn.meme.am/cache/$1s/folder$3/$2$3.jpg"
    },
    "memedad": {
        "link": "^(memedad\\.com/)meme(/\\d+)$",
        "img": "^(memedad\\.com/)thumbnails(/\\d+).*",
        "to": "$1memes$2.#jpg gif#"
    },
    "livememe": {
        "link": "^l(?:vme\\.me|ivememe\\.com)/([\\da-z]{5,7}).*",
        "img": "^e\\.lvme\\.me/([\\da-z]+)_\\d+\\.jpg.*",
        "to": "//e.lvme.me/$1.jpg"
    },
    "memecrunch": {
        "link": "^memecrunch\\.com/meme/[^/]+",
        "res": "src=\"(/meme/[^\"]+)",
        "img": "^thumbs\\d+\\.(memecrunch\\.com/meme/[^/]+/).*"
    },
    "makeameme": {
        "link": "^(makeameme\\.org/m)eme(/[^?/#]+)(?:/raw)?$",
        "img": "^(makeameme\\.org/m)edia/created/\\d+(/[^.]+)\\.jpg$",
        "to": "$1edia/created$2.jpg"
    },
    "memegen": {
        "link": "^(memegen\\.com/)meme/(\\w+).*",
        "to": "http://m.$1$2.jpg"
    },
    "quickmeme": {
        "link": "^(?:(?:m\\.)?quickmeme\\.com/meme|qkme\\.me)/(\\w+).*",
        "img": "^t\\.qkme\\.me/([^.]+).+",
        "to": "http://i.qkme.me/$1.jpg"
    },
    "joemonster": {
        "img": "^(vader\\.joemonster\\.org/upload/[qr]../)[^_]{1,3}_(\\d.+\\.).*",
        "to": "$1$2#jpg png gif#"
    },
    "imgflip": {
        "link": "^(imgflip\\.com/)(?:i|gif)/([^?#]+)",
        "img": "^i\\.(imgflip\\.com/)2/([^.]+).+",
        "to": "//i.$1$2.#jpg gif#"
    },
    "ragecollection": {
        "link": "^(ragecollection\\.com/)(\\d+).*",
        "img": "^(?:(?:i|thumbs|static|cdn)\\.)?(ragecollection\\.com/)(?:(?:(?:rage)?comic|rage|thumb)s/)?(\\d+).+",
        "to": "http://i.$1comics/$2.png"
    },
    "troll.me": {
        "useimg": 1,
        "link": "^troll\\.me/(\\?p=\\d+|20(?:\\d\\d/){3}|meme/\\w+)",
        "res": "src=['\"]((?:http://troll\\.me)?/images[^'\"]+)['\"] (?:title|alt)=['\"]([^'\"]+)",
        "img": "^(troll\\.me/images\\d*/[^.]+)-thumb",
        "to": "$1"
    },
    "lazy...info": {
        "img": "^(img00\\d\\.lazy(g(?:irl|adget|ame)|boy|car|sport)|lzimages\\.lazygirl)(s\\.info/.+)\\.m?thumb",
        "to": ":\nreturn $[1] + $[3] + (/girl|boy/.test($[2]||'') ? '.sized' : '')"
    },
    "justjared": {
        "img": "^(cdn\\d+\\.cdn\\.justjared(?:jr)?\\.com/wp-content/uploads/(?:[^/]+/)+?)thumbs/",
        "to": "$1"
    },
    "imagefap": {
        "img": "^(?:x\\d*\\.)?(fap\\.to/images/)(?:thumb|mini)/",
        "to": "//x.$1full/"
    },
    "FetLife": {
        "link": "^fetlife\\.com/users/\\d+/pictures/\\d+",
        "res": "<img src=\"(https://pic\\d+\\.fetlife.com/[^\"]+)\"\\s+(?:alt=\"([^\"]+))?"
    },
    "motherless": {
        "url": "http://motherless.com/$1?full",
        "res": "<meta property=\"og:image\" content=\"([^\"]+)\n<title>([^-]+)",
        "img": "^(?:cdn\\d*\\.)?thumbs\\.motherlessmedia\\.com/thumbs/([\\dA-F]+)(?:-zoom)?\\..*"
    },
    "eroprofile": {
        "link": "^(?:m\\.)?(eroprofile\\.com/)[mp](/(?:photo|video)s/view/.+)",
        "url": "//www.$1m$2",
        "res": "<(?:a href|source src)=\"((?:https?:)?//(?:pictures|cdn\\.videos)[^\"]+)"
    },
    "erome.com": {
        "link": "^erome\\.com/[ai]/\\w+",
        "res": ":\nvar x=$._.match(/(?:=\"img\" data-|<source )src=\"(?:https?:)?\\/\\/s\\d+\\.erome\\.com\\/\\d+\\/[^>]+/g),r={}\nx&&x.forEach(function(s,i){\n var v = s[0]=='<', b = s.indexOf('/'), e = s.indexOf('\"', b+5), u=s.slice(b, e), id=u.match(/[^/]\\/([^/_.]+)[._]/)[1];\n u=(/label='HD'/.test(s) ?'#':'')+u\n if(!r[id])r[id]=[u]\n else if(typeof r[id][0]=='string') r[id][0] = [r[id][0], u]\n else return;\n i=!i&&$._.match(/<title>([^<]+)/)\n i&&id[1] && r[id].push(i[1])\n})\nr=Object.values(r)\nreturn r.length?r:null"
    },
    "pornbot": {
        "link": "^(?:v\\.)?(pornbot\\.net)/([\\da-z]{8,}).*",
        "url": "https://$1/ajax/info.php?v=$2",
        "res": ":\n$._=JSON.parse($._)\nreturn $._.error ? {_: $._.error} : ($._.webmUrl || $._.mp4Url)",
        "img": "^img\\.(pornbot\\.net)/([\\da-z]{8,})/\\2_.*"
    },
    "sex.com": {
        "useimg": 1,
        "link": "^(sex\\.com)/picture/(\\d+).*",
        "res": "=\"image_src\" href=\"([^\"?]+)",
        "img": "^(images\\.sex\\.com/images/pinporn/\\d{4}/[01]\\d/[0-3]\\d/)(?!620/|video/)[^/]+",
        "to": "$1620"
    },
    "pzy.be": {
        "link": "^(pzy\\.be/)v/",
        "url": "$1v/",
        "res": "=\"(/i/\\d[^\"]+)",
        "img": "^(pzy\\.be/)[vt]/"
    },
    "4chan": {
        "img": "^(i\\.4cdn\\.org/[\\da-z]+/\\d+)s\\..*",
        "to": "$1.#jpg png webm gif#"
    },
    "archived.moe": {
        "link": "^archived\\.moe/\\w{1,5}/redirect/",
        "res": "; url=([^\"]+)"
    },
    "tistory": {
        "img": "^(cf(?:ile|s)\\d*\\.uf\\.tistory\\.com/)(?:original|image)(/[\\dA-F]+)",
        "to": "$1original$2"
    },
    "e-hentai.org": {
        "link": "^(?:g\\.e-|e[x-])hentai\\.org/s/[\\da-f]+/\\d+-\\d+$",
        "res": "<img id=\"img\" src=\"([^\"]+)\n<title>([^<]+)"
    },
    "hentai-foundry": {
        "link": "^(hentai-foundry\\.com/)pic(?:tures/user/[^/]+/|-)(\\d+)[./](?:html|[^#/]+.*)",
        "url": "$1pic-$2.html?enterAgree=1",
        "res": "(//pictures\\.$1(?:[^/]+/)+?$2[^\"]+)\\S+(?: (?:\\S+ ){0,3}?alt=\"([^\"]+))?",
        "img": "^thumbs\\.(hentai-foundry\\.com/)thumb\\.php\\?pid=(\\d+).*"
    },
    "sankakucomplex": {
        "link": "^(?:chan|idol)\\.sankakucomplex\\.com/post/show/\\d+",
        "res": ": <a href=\"(//[ic]s\\.[^\"]+)\" id=\"?highres",
        "img": "^([ci])[s\\d]?(\\.sankakucomplex\\.com/data/)(?!avatars/)[^/]+/((?:[\\da-f]{2}/){2})(?:preview|sample-)?([\\da-f]{32}\\.).+",
        "to": "#$1s$2$3$4#jpg png gif webm#\n$1s$2sample/$3sample-$4#jpg png gif webm#"
    },
    "e621|e926": {
        "link": "^e[69]2[16]\\.net/post/show/\\d+",
        "res": "(?:: <a href|src)=\"((?:https?:)?//s[^\"]+)\" (?:id=\"highres|type=\"video/webm)",
        "img": "^(static\\d*\\.e[69]2[16]\\.net/data/)[^/]+/((?:[\\da-f]{2}/){2})(?:preview)?([\\da-f]{32}\\.).+",
        "to": "#$1$2$3#webm jpg png gif#\n$1sample/$2$3#jpg png gif#"
    },
    "donmai.us": {
        "link": "^(?:(?:safe|dan)booru\\.|hijiribe\\.|sonohara\\.)?(donmai\\.us)/post(?:s|/show)/(\\d+).*",
        "url": "//danbooru.$1/posts/$2.json",
        "res": ":\nvar x = JSON.parse($._);\nreturn x&&x.file_url ? [x.file_url, (x.tag_string_general + (x.tag_string_artist ? ' by ' + x.tag_string_artist : '')).replace(/_/g, \" \")] : null",
        "img": "^((?:(?:safe|dan)booru\\.|hijiribe\\.|sonohara\\.)?donmai\\.us/data/)[^/]+/(?:sample-)?([\\da-f]{32}\\.).+",
        "to": "#$1$2#jpg png gif webm#\n$1sample/sample-$2#jpg png gif#"
    },
    "*.booru.org|mspabooru": {
        "useimg": 1,
        "link": "^(?:mspabooru\\.com|[\\da-z-]{1,30}\\.booru\\.org)/index\\.php\\?page=post&s=view&id=\\d+",
        "res": "=\"(http://(?:mspa|img\\.)booru\\.[^\"]+)\" id=\"image\"",
        "img": "^thumbs\\d*\\.((?:booru\\.org|mspabooru\\.com)/)(?:([^/]+/)(?:thumbnails/+)?)?(\\d+/)thumbnail_([^?]+).*",
        "to": ":\nreturn ($[1][0]=='b'?'img.':'')+$[1]+($[2]||'')+'images/'+$[3]+$[4];"
    },
    "rule34.xxx": {
        "useimg": 1,
        "link": "^rule34\\.xxx/index\\.php\\?page=post&s=view&id=\\d+",
        "res": "<li><a href=\"(//img\\.rule34\\.xxx/[^\"]+)",
        "img": "^((?:img\\.|us\\.)?rule34\\.xxx)/+(thumbnail|sample)s/(\\d+)/\\2_([\\da-f]+\\.).*",
        "to": "$1/images/$3/$4#webm jpg png jpeg gif#"
    },
    "gelbooru": {
        "useimg": 1,
        "link": "^gelbooru\\.com/index\\.php\\?page=post&s=view&id=\\d+",
        "res": "<li><a href=\"((?:https?:)?//(?:s?img\\d?\\.|assets\\.)?gelbooru\\.com/+[^\"]+)",
        "img": "^(?:s(?:img|thumb)\\d?\\.|assets\\.)?(gelbooru\\.com/+)(?:sample|thumb(?:nail)?)s/(\\w\\w/\\w\\w)/(?:thumbnail|sample)_([\\da-f]+).*",
        "to": "#$1/images/$2/$3.#webm jpg png gif jpeg#\n$1/samples/$2/sample_$3.#jpg png gif jpeg#"
    },
    "x|safebooru": {
        "useimg": 1,
        "link": "^(?:safebooru\\.org|xbooru.com)/index\\.php\\?page=post&s=view&id=\\d+",
        "res": "<li><a href=\"(https?://(?:safe|img\\.x)booru.[^/]+/+[^\"]+)",
        "img": "^(safebooru\\.org/+)(?:sample|thumb(?:nail)?)s/(\\d+)/(?:thumbnail|sample)_([\\da-f]+)",
        "to": "#$1/images/$2/$3\n$1/samples/$2/sample_$3"
    },
    "rule34hentai": {
        "link": "^(rule34hentai\\.net/)post/view/\\d+",
        "res": ":\nvar m=$._.match(/<(form action|source src)='\\/(_?images?\\/[^']+)/)\nreturn m ? 'http://'+$[1]+m[2]+(m[1][0]=='s'?'.webm':'') : null",
        "img": "^(rule34hentai\\.net/)_thumbs(/[\\da-f]{32}).*",
        "to": "$1_images$2"
    },
    "derpibooru": {
        "link": "^(?:derpiboo(?:ru\\.org|\\.ru)|trixiebooru\\.org)/(\\d+)[^.]*",
        "url": "derpibooru.org/$1.json",
        "res": ":\n$ = JSON.parse($._)\nreturn [[\n $.original_format=='gif'||$.width<1200 && $.height<1200 || !$.representations ? $.image : ['#' + $.image, $.representations.large],\n [$.tags, $.source_url].filter(Boolean).join(' ')\n]]",
        "img": "^derpicdn\\.net/img/20\\d\\d/1?\\d/[123]?\\d/(\\d+)/.+"
    },
    "redditbooru": {
        "link": "^redditbooru\\.com/gallery/\\w+",
        "res": ":\n$=$._.match(/\\.startUp\\s=\\s*(\\{[^\\n\\r]+\\});/)\n$=JSON.parse($[1]).images;\nreturn $ ? $.map(function(i){return [i.cdnUrl, i.caption +' '+ i.sourceUrl]}) : $",
        "img": "^(?:redditbooru\\.com/cache|thumb\\.awwni\\.me)/([\\da-zA-Z/=+]+).*",
        "to": ":\nreturn window.atob($[1])"
    },
    "booru.io": {
        "link": "^(booru\\.io/)p/([\\w-]+)",
        "url": "$1/api/entity/$2",
        "res": ":\nvar x=$._, t=[], m={}\nObject.keys(x.tags).forEach(function(i){ i=i.split('#'); if(i[1])m[i[1]]=i[0]; else t.push(i[0]) })\nreturn ['data/' + Object.values(x.transforms)[0], [new Date(x.createdAt).toLocaleString(), 'by ' + m.artist, m.character, m.origin, t.join(', ')].filter(Boolean).join(' | ')]"
    },
    "IbSearch.xxx": {
        "useimg": 1,
        "link": "^ibsearch\\.xxx/images/\\d+",
        "res": "id=\"image\" src=\"([^\"]+)\" alt=\"([^\"]*)",
        "img": "^(im\\d\\.ibsearch\\.xxx/)(?:t|resize/)(\\w[^?]+).*",
        "to": "$1$2"
    },
    "wildcritters.ws": {
        "useimg": 1,
        "link": "^wildcritters\\.ws/post/show/\\d+",
        "res": ": <a href=\"(http[^\"]+)\" id=\"highres\"",
        "img": "^(wildcritters\\.ws/data/)(?:preview|sample)/([\\da-f]{32}\\.).+",
        "to": "#$1$2#jpg png gif#\n$1sample/$2#jpg png gif#"
    },
    "weasyl": {
        "link": "^(weasyl\\.com)/(?:~[^/]+/)?(?:submissions?|character)(/\\d+)/[\\w-]+",
        "res": "href=\"(https://cdn\\.$1/(?:~[^/]+/submissions$2|static/(?:character|submission))/[\\da-f/]+/[^\"]+)\n<title>([^<]+)"
    },
    "bakashots.me": {
        "img": "^(bakashots\\.me/[\\w-]{10,}=?=?)[./].+",
        "to": "$1"
    },
    "furrynetwork": {
        "link": "^((?:beta\\.)?furrynetwork\\.com/)((?:artwork|photo|multimedia)/\\d+).*",
        "url": "$1api/$2",
        "res": ":\n$._=JSON.parse($._)\nreturn [[$._.record_type[0]=='m' ? $._.url : ['#'+$._.images.original, $._.images.large], $._.title + ' by ' + $._.character.display_name]]",
        "img": "^((?:d3gz42uwgl1r1y\\.cloudfront\\.net|furrynetwork(?:-beta)?\\.s3\\.amazonaws\\.com)/(\\w\\w)/\\2\\w+/submission/20\\d\\d/[01]\\d/[\\da-f]{32})/\\d+x\\d+.*",
        "to": "$1#/2500x1500.jpg .gif .webm .mp4 .mp3#"
    },
    "furaffinity.net": {
        "link": "^furaffinity\\.net/view/(\\d+)/$",
        "url": "//www.furaffinity.net/full/$1/",
        "res": "data-fullview-src=\"([^\"]+)\n<title>([^<]+?) --",
        "img": "^t\\.facdn\\.net/(\\d+)@.+"
    },
    "pixiv": {
        "link": "^pixiv\\.net/member_illust\\.php\\?mode=(?:[^&]+&)+?illust_id=(\\d+)",
        "loop": 1,
        "res": ":\nvar i,u,r=[], p=/\\/(?:c\\/[\\dx]+\\/)?img-master(\\/[^.]+_p\\d+)[^.]+\\.jpg.*/, t='/img-original$1.'\nif (/[?&]mode=manga/.test($.url[0])) {\n ($._.match(/\" data-src=\"[^\"]+/g)||[]).forEach(function(i) {\n  i=i.slice(12).replace(p,t)\n  r.push([[i+'png',i+'jpg',i+'gif']])\n });\n $=$._.match(/<title>([^<]+)/)\n if($) r[0][1]=$[1]\n} else {\n if (/[?&]mode=medium/.test($.url[0])&&/_work multiple/.test($._)) return {loop: $.url[0].replace('=medium', '=manga')}\n try{\n  p = JSON.parse($._.match(/\\}\\)\\((\\{[^\\n]+),\\}\\)/)[1].replace(/([,{])\\s*([a-zA-Z\\d]+)\\s*:/g, '$1\"$2\":').replace(/,\\s*(\\]|\\})/g, '$1') + '}')\n  i=p.preload.illust[$[1]]\n  u=p.preload.user[i.userId].name\n\n  for (p = 0; p < i.pageCount; ++p) r.push([i.urls.original.replace('_p0', '_p' + p)])\n\n  r[0][1] = '['+i.illustTitle+' by ' + u + '] ' + i.illustComment + ' | ' + new Date(i.uploadDate).toLocaleString()\n }catch(e){}\n}\n\nif(!r.length){\n i = $._.match(/<(?:div class=\"(?:works_display|img-container)\">\\s*<a href=\"([^?]+\\?mode=manga[^\"]+))/);\n if (i) return (i[1].indexOf('://') > 3 ? '' : $.base) + i[1].replace(/&amp;/g, '&')\n i = [\n  $._.match(RegExp('=\"(https?://i\\.pximg\\.net/[^.]+/' + $[1] + '_[^\\'\"]+)')),\n  $._.match(/=\"og:(?:title|description)\" content=\"[^\"]*/g)\n ];\n if (i[0]) {\n  u=i[0][1].replace(p,t);\n  r = [[[u+'png',u+'jpg',u+'gif'], i[1] && i[1].map(function(i) {\n   return i.slice(i.lastIndexOf('\"') + 1)\n  }).filter(Boolean).join(' - ')]]\n }\n}\n\nreturn r",
        "img": "^i(?:\\d\\.pixiv|\\.pximg)\\.net/(?:c/\\d+x\\d+/)?(user-profile|img-master)(/img/\\d\\d(?:\\d\\d/){6}\\d+_[^_]+)_[^.]+(\\.\\w+).*",
        "to": ":\nvar i=$[1][0]=='i'\nreturn '//i.pximg.net/' + (i ? 'img-original' : $[1]) + $[2] + (i && $[3]=='.jpg' ? '.#jpg png gif#' : $[3])"
    },
    "myanimelist": {
        "img": "^(myanimelist\\.cdn-dena\\.com/)(?:r/[^/]+/)?(?:(s/[^.]+)|(images/[^.]+\\d+(?:_thumb)?)\\D*)\\.([^?]+).*",
        "to": ":\nreturn $[1]+($[2] || ($[3].indexOf('/userimages')>0 ? $[3].replace(/_?thumbs?\\/?/g,'') : $[3] + '#l #'))+'.'+$[4]"
    },
    "newgrounds": {
        "link": "^newgrounds\\.com/art/view/[^/]+/[^/]+",
        "res": "=\"(https://art\\.ngfiles\\.com/images/[^\"]+)\n=\"og:title\" content=\"([^\"]+)",
        "img": "^newgrounds\\.com/downloads/wallpapers/get\\.php\\?id=\\d+.*",
        "to": "$&"
    },
    "zerochan.net": {
        "useimg": 1,
        "link": "^(zerochan\\.net)(/)(?:full/)?(\\d{4,}).*",
        "img": "^s(?:[123]|tatic)\\.(zerochan\\.net/)(?:(?:\\d\\d/)+|([^/]*)\\.(?:\\d+|full)\\.)(\\d{4,})\\.jpg",
        "to": "http://static.$1$2.full.$3.jpg"
    },
    "minitokyo.net": {
        "img": "^static([123]?\\.minitokyo\\.net/)(?:thumbs|view|downloads)(/\\d\\d/\\d\\d/\\d+)",
        "to": "static$1downloads$2"
    },
    "renders-graphics": {
        "link": "^(renders-graphi(?:ques\\.fr|cs\\.com)/)gal(?:lery|erie)/[^/]+/[^.]+-(\\d+)\\.htm$",
        "img": "^((?:img\\d\\.)?renders-graphi(?:ques\\.fr|cs\\.com)/(?:image/upload/)?)mini/",
        "to": ":\nreturn $[2] ? $[1]+'gestion/telechargement.php?id_image='+$[2] : $[1]+'normal/';"
    },
    "porn-galleries": {
        "img": "^(content\\d\\.[^.]{3,20}\\.[a-z]+/[\\da-z-]{3,20}(?:\\.[a-z]{2,5})?/(?:[a-z_-]+/){0,2}\\d+/(?:[^.]+_)?)tn_(?=\\d{2,3}\\.jpg)",
        "to": "$1"
    },
    "opendesktop.org": {
        "img": "^(cn\\.pling\\.com/)cache/[\\dx]+/",
        "to": "$1"
    },
    "XFileSharing-get": {
        "link": "^((?:imagetwist|imageshimage)\\.com)/([\\da-z]{12})(/[\\w.-]+\\.(?:[Jj][Pp][Ee]?[Gg]|png|PNG|gif|GIF|bmp|BMP)(?:\\.html)?)$",
        "url": "$1/$2$3",
        "res": "src=\"(https?://[^\"]+)\" (\\w+=\"[^\"]+\"\\s+)*?(?:class=\"pic|id=\"[^\"]+\"\\s*>)",
        "img": "^(?:i\\D{0,3}\\d*\\.)?((?:imagetwist|imageshimage)\\.com)/(?:i/\\d{5}/([\\da-z]{12})_[^.]+|th/\\d{5}/([\\da-z]{12}))\\.jpg$",
        "note": "http://sibsoft.net/xfilesharing_free.html"
    },
    "XFileSharing-post": {
        "link": "^([^/]+/)([\\da-z]{12})(/[\\w.-]+\\.(?:[Jj][Pp][Ee]?[Gg]|png|PNG|gif|GIF|bmp|BMP)(?:\\.html)?)$",
        "url": "$1$2$3 :op=view&id=$2&pre=1",
        "res": "src=\"(https?://[^\"]+)\" (\\w+=\"[^\"]+\"\\s+)*?(?:class=\"pic|id=\"[^\"]+\"\\s*>)",
        "img": "^(?:i\\D{0,3}\\d*\\.|main\\.)?([^/]+/)(?:i/\\d{5}/([\\da-z]{12})_[^.]+|th/\\d{5}/([\\da-z]{12}))\\.jpg$"
    },
    "tumblr": {
        "useimg": 1,
        "link": "^([^/]{5,70})/(?:image|post)/(\\d{8,14})(?:/[^.?]*$|\\?|#|$).*",
        "url": "https://api.tumblr.com/v2/blog/$1/posts?id=$2&filter=raw&api_key=4AjWu4k7xrMxAqiJjppAHatW1QLQGxZ2NKo2XdTlcov4i8qZuw",
        "res": ":\n$._=JSON.parse($._)\nif($._.meta.status!=200) return null\n$=$._.response.posts[0];\nvar t = $.caption||'';\nswitch($.type) {\n case 'photo':\n  return $.photos.map(function(x,i){\n   var c=x.caption||'';\n   return [x.original_size.url, (!i&&t ? (c ? '['+t+'] ' : t) :'') + c]\n  });\n  break;\n case 'video':\n  if($.video_url)return [$.video_url, t]\n  else if($.permalink_url)return{loop: $.permalink_url}\n}\nreturn !1",
        "img": "^(?:((?:\\d\\d\\.)?media)|data)(\\.tumblr\\.com/(?:[\\da-f]{32}/)?tumblr_\\w+_)((?:\\d{2,4}|raw)\\.(?!gif)|frame\\d*\\.jpg)",
        "to": ":\nreturn $[4][0]=='f' ? 'vt'+$[2]+'.mp4' : '//'+($[1]||'78.media')+$[2]+'#1280 500 400#.'"
    },
    "wordpress": {
        "img": "^([^/]{4,70}(?:/[^/]+){0,6})(?:(/)(?:(gallery/(?:[^/]+/)*?)thumbs/thumbs_|((?:upload|image(?:s_blog)?|file)s/)(?:(?:thumbnails_\\d+x\\d+/thumb_([^.]+?)(?:-\\d+x\\d+)?|([^?]+)-\\d+x\\d+)(\\.[a-z]{3,4})))|\\.(jpe?g|png|gif)\\?(?:(?:quality=\\d+|fit=[\\d%C]+)&)?(?:w|resize)=\\d+(?:(?:%2C|,)\\d+)?(?:&(?!(?:[^&]*&)*s=).*|$))",
        "ci": 2,
        "loop": 2,
        "to": ":\nreturn $[1] + ($[2] || '') + ($[3] || '') + ($[4] || '') + ($[5] || '') + ($[6] ? $[6] + $[7] : '') + ($[3] || $[6] ? '' : '.' + (!$[8]||$[8][0]=='j' ? '#jpg jpeg png gif#' : $[8]))"
    },
    "IGDB": {
        "img": "^(igdb\/image\/upload)((?:\/s--[\\da-zA-Z]{8}--)?(?:\/(?:(?:[eghloqrtuwxyz]|\\$\\w+|ar?|bo?|c[os]?|d(?:l|n|pr)?|fl?|if|pg)_[^,\/]+,?)+)*|(video\/upload)(?:\/s--\\w{8}--)?(?:\/(?:(?:[ghloqwxyr]|a[cfr]?|b[or]?|co?|d[lu]|eo?|fl?|s[op]|v[cs])_[^,\/]+,?)+)*)(\/[^?#]+).*$",
        "to": "$1/t_original$3"
    },
    "Cloudinary": {
        "img": "^([^/]{4,70}/(?:[\\w-]+/)?)(?:(image/(?:upload|fetch|sprite|facebook|twitter|gplus|instagram_name|gravatar|youtube|hulu|vimeo|animoto|worldstarhiphop|dailymotion))(?:/s--[\\da-zA-Z]{8}--)?(?:/(?:(?:[eghloqrtuwxyz]|\\$\\w+|ar?|bo?|c[os]?|d(?:l|n|pr)?|fl?|if|pg)_[^,/]+,?)+)*|(video/upload)(?:/s--\\w{8}--)?(?:/(?:(?:[ghloqwxyr]|a[cfr]?|b[or]?|co?|d[lu]|eo?|fl?|s[op]|v[cs])_[^,/]+,?)+)*)(/[^?#]+).*",
        "to": "$1$2$3$4"
    },
    "thumbor": {
        "img": "^[^/]{4,70}/(?:thumbor/|(?:new-)?resizer/|v\\d)?[\\w\\-]{26}[\\w\\=-]{2}/(?:(?:smart|trim(?::(?:top-left|bottom-right))?|left|center|right|top|middle|bottom|(?:full-)?fit-in|-?(?:\\d+|orig)?x-?(?:\\d+|orig)?|\\d+x\\d+:\\d+x\\d+|filters:[^/]+)/)*((?:https?(?:%3[aA]|:)(?:%2[fF]|/){2})?(?:[^./]{1,70}\\.)+[a-z]{2,6}(?:%2[fF]|/)[^&?#]+).*",
        "to": ":\nif($[1].indexOf('%')>0)$[1] = decodeURIComponent($[1])\nreturn /^http/.test($[1]) ? $[1] : '//' + $[1]"
    },
    "vBulletin": {
        "link": "^[^/]{5,70}/(?:forums?/)?attachment\\.php\\?(?:[^&]+&)*?attachmentid=(\\d+).*",
        "img": "^[^/]{5,70}(?:/forums?)?/attachment\\.php\\?(?:[^&]+&)*?thumb=(1)(?:$|&.*)",
        "to": ":\nvar n=this.node, r=/\\.(jpe?g|gif|png|bmp|web[mp]|mp[34])\\b/i\nconsole.log(n.title)\nreturn $[1]==1 || r.test(n.textContent) || r.test(n.title) || ~(n.src||'').indexOf($[1]) || n.classList.contains('thumbnail') ? $[0].replace(/thumb=1&?/,'') : ''"
    },
    "typepad": {
        "img": "^([^/]{3,70}/\\.a/[\\da-f]{34})(?:-(?:\\d+wi|popup|pi))?$",
        "to": "$1"
    },
    "akina": {
        "link": "^([^/]+/)\\?v=(\\d{4}-\\d\\d)-(\\d\\d)_([^&]+).*",
        "img": "^([^/]+/)thumbs/(\\d{4}-\\d\\d)/(\\d\\d)/([^?]+).*",
        "to": "$1img/$2/$3/$4",
        "note": "http://akina-photohost.org/"
    },
    "coppermine": {
        "img": "^([^/]{3,70}/(?:[^/]{3,}/){0,2}?albums/(?:[^/]+/)+?)thumb_(?=[^/]+$)",
        "to": "$1# normal_#",
        "note": "http://coppermine-gallery.net/"
    },
    "chevereto": {
        "useimg": 1,
        "link": "^[^/]{4,70}/image/\\w{1,5}$",
        "res": "ratio:\\s*\\d+\\.\\d+,\\s*url: ?\"([^\"]+)\n=\"og:title\" content=\"([^\"]+)",
        "img": "^([^/]{4,70}/images/20(?:\\d\\d/){3}.+\\.)(?:th|md)\\.",
        "to": "$1"
    },
    "ImgShot-script": {
        "useimg": 1,
        "link": "^[^/]+/(?:[a-z]{1,5}/)?i(?:/|mg-)[\\da-f]{13}\\.html$",
        "url": "$& :imgContinue=",
        "res": "<img.+?' src=[\"']([^\"']+)",
        "img": "^([^/]+/[^/]+/)small(/\\d{4}/\\d{2}/\\d{2}/[\\da-f]{13}\\..+)",
        "to": "$1big$2",
        "note": "http://codecanyon.net/item/imgshot-image-hosting-script/2558257"
    },
    "CF-Image-Host": {
        "img": "^([^/]+/)(?:(?:[pd][mtl](-\\d+)|((?:[^/]+/)*?)[pd][mtl](/[\\dA-Z]{3,6}/.+))\\.(?:jpe?g|png|gif|bmp|html)$|(?:i(?:ndex|mage)\\.php)?\\?[pd][mtl]=([\\dA-Z]{3,6}))",
        "to": ":\nreturn 'http://'+$[1]+($[5] ? '#image.php #?di=' + $[5] : ($[3]||'')+ 'di' +($[2]||'') + ($[4]||'') +'.jpg');",
        "note": "http://codefuture.co.uk/projects/imagehost/"
    },
    "CF-IH-stock-photos": {
        "link": "^[^/]+/p/\\d{4,10}(?:_\\d)?\\.html$",
        "res": "src=\"([^\"]+)"
    },
    "MihalismScript": {
        "useimg": 1,
        "link": "/viewer\\.php\\?file=([\\da-z_]+)(\\.(?:jpe?g|gif|png)+)$",
        "img": "/(?:index\\.php\\?module=thumbnail&file=([\\da-z_]+\\.(?:jpe?g|gif|png)+)$|images/([\\da-z_]+)_thumb(?=\\.))",
        "to": "/#images files i#/$1$2",
        "note": "http://www.mihalismscript.com/"
    },
    "image-host-script": {
        "link": "/share(?:-|\\.php\\?id=)([\\dA-F]{4}_[\\dA-F]{8}).*",
        "url": "/share.php?id=$1",
        "res": "\\[img\\]([^\\[]+/image\\.php\\?id=$1[^\\[]+)\n<h1>([^<]+)",
        "img": "/(?:thumb|image)(?:-|\\.php\\?id=)([\\dA-F]{4}_[\\dA-F]{8}).*"
    },
    "php-photo-album": {
        "img": "^([^/]+/(?:[^/]+/)*?main\\.php\\?cmd=)(?:thmb|image(?:view|orig)?)&var1=([^&]+).*",
        "to": "#$1imageorig&var1=$2\n$1image&var1=$2&var2=1024_85_false",
        "note": "http://www.phpalbum.net/"
    },
    "MarginalHacks-album": {
        "img": "^([^/]+/(?:[^/]+/+)*?)tn/([^/]+?)(?:(\\.(?:gif|png|bmp))\\.jpg|(?:\\.med)?(\\.(?:jpg|gif|png|bmp)))$",
        "ci": 2,
        "to": ":\nreturn $[4] ?\n'#' + $[1] + $[2] + $[4] + '\\n' + $[1] + 'tn/' + $[2] + '.med' + $[4] :\n'#' + $[1] + $[2] + $[3] + '\\n' + $[1] + 'tn/' + $[2] + $[3];",
        "note": "http://marginalhacks.com/Hacks/album/"
    },
    "phpGraphy": {
        "img": "^([^/]+/(?:[^/]+/)*?index\\.php\\?)(?:display(?:pic)?|previewpic)=([^&]+).*",
        "to": ":\nreturn $[2].slice(-13) === 'directory.jpg' ? $[0] : $[1] + 'displaypic=' + $[2];",
        "note": "http://phpgraphy.sourceforge.net/"
    },
    "PhotoPost": {
        "useimg": 1,
        "link": "^([^/]+/(?:[^/]+/)*?show)(?:photo|full)\\.php[?/]photo[=/](\\d+).*",
        "url": "$1full.php?photo=$2",
        "res": "<img .*?src=\"([^\"]+)",
        "img": "^([^/]+/(?:[^/]+/+){0,2}?)(?:((?:[^\\d-]+-)?d(?:irect_d)?ata\\d?/+(?:[^\\d/]+/+)?\\d{1,10}/)(?:(?:thumbs|medium)/([^/]+\\.\\w{3,4})$|.+-thumb\\.\\w{3,4}$)|((?:\\d/)+[^/]+)_thumb\\.(\\w{3,4})$)",
        "to": ":\nvar l;\nif ($[4]) {\n l = [$[1] + $[4], '.#' + $[5] + ' ' + $[5].toUpperCase() + '#'];\n l = '#' + l[0] + '_original' + l[1] + '\\n' + l.join(\"\");\n} else if (/-thumb\\.[A-Za-z]{3,4}$/.test($[0])) l = $[0].replace('-thumb.', '.');\nelse {\n l = $[1] + $[2];\n l = '#' + l + $[3] + '\\n' + l +'medium/' + $[3];\n}\nreturn l;",
        "note": "http://www.photopost.com/"
    },
    "LinkedMedia": {
        "link": "^[^?#]{6,4096}\\.(?:jp(?:g|eg?)|a?png|gif|svgz?|web[pm]|bmp|xbm|pict|j(?:if|fif?)|og[gv]|mp4)(?:$|[?#])",
        "ci": 1
    }
}